State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: stmts
    3           | %empty

    4 stmts: stmt
    5      | stmts stmt

    6 stmt: expr SEMICOLON
    7     | ifstmt
    8     | whilestmt
    9     | forstmt
   10     | returnstmt
   11     | BREAK SEMICOLON
   12     | CONTINUE SEMICOLON
   13     | block
   14     | funcdef
   15     | SEMICOLON

   16 expr: assignment
   17     | expr ADD expr
   18     | expr SUB expr
   19     | expr MUL expr
   20     | expr DIV expr
   21     | expr MODULO expr
   22     | expr GREATER expr
   23     | expr GREATER_EQUAL expr
   24     | expr LESSER expr
   25     | expr LESSER_EQUAL expr
   26     | expr EQUAL expr
   27     | expr NOT_EQUAL expr
   28     | expr AND expr
   29     | expr OR expr
   30     | term

   31 term: LPAREN expr RPAREN
   32     | SUB expr
   33     | NOT expr
   34     | PLUS_PLUS lvalue
   35     | lvalue PLUS_PLUS
   36     | MINUS_MINUS lvalue
   37     | lvalue MINUS_MINUS
   38     | primary

   39 assignment: lvalue ASSIGN expr

   40 primary: lvalue
   41        | call
   42        | objectdef
   43        | LPAREN funcdef RPAREN
   44        | const

   45 lvalue: ID
   46       | LOCAL ID
   47       | DCOLON ID
   48       | member

   49 member: lvalue PERIOD ID
   50       | lvalue LSQUARE expr RSQUARE
   51       | call PERIOD ID
   52       | call LSQUARE expr RSQUARE

   53 call: call LPAREN elist RPAREN
   54     | lvalue callsuffix
   55     | LPAREN funcdef RPAREN LPAREN elist RPAREN

   56 callsuffix: normcall
   57           | methodcall

   58 normcall: LPAREN elist RPAREN

   59 methodcall: DPERIOD ID LPAREN elist RPAREN

   60 elist: expr
   61      | expr COMMA elist
   62      | %empty

   63 objectdef: LSQUARE elist RSQUARE
   64          | LSQUARE indexed RSQUARE

   65 indexed: indexedelem
   66        | indexedelem COMMA indexed

   67 indexedelem: LCURLY expr COLON expr RCURLY

   68 $@1: %empty

   69 block: LCURLY $@1 statements RCURLY

   70 funcname: ID
   71         | %empty

   72 funcprefix: FUNCTION funcname

   73 funcargs: LPAREN idlist RPAREN

   74 funcbody: block

   75 funcdef: funcprefix funcargs funcbody

   76 const: INTEGER
   77      | REAL
   78      | STRING
   79      | NIL
   80      | TRUE
   81      | FALSE

   82 idlist: ID
   83       | idlist COMMA ID
   84       | %empty

   85 ifprefix: IF LPAREN expr RPAREN

   86 elseprefix: ELSE

   87 ifstmt: ifprefix stmt elseprefix stmt
   88       | ifprefix stmt

   89 loopstart: %empty

   90 loopend: %empty

   91 loopstmt: loopstart stmt loopend

   92 whilestart: WHILE

   93 whilecond: LPAREN expr RPAREN

   94 whilestmt: whilestart whilecond loopstmt

   95 N_rule: %empty

   96 M_rule: %empty

   97 forprefix: FOR LPAREN elist SEMICOLON M_rule expr SEMICOLON

   98 forstmt: forprefix N_rule elist RPAREN N_rule loopstmt N_rule

   99 returnstmt: RETURN expr SEMICOLON
  100           | RETURN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ADD <stringValue> (258) 17
    SUB <stringValue> (259) 18 32
    MUL <stringValue> (260) 19
    DIV <stringValue> (261) 20
    PLUS_PLUS <stringValue> (262) 34 35
    MINUS_MINUS <stringValue> (263) 36 37
    MODULO <stringValue> (264) 21
    EQUAL <stringValue> (265) 26
    NOT_EQUAL <stringValue> (266) 27
    GREATER <stringValue> (267) 22
    LESSER <stringValue> (268) 24
    LESSER_EQUAL <stringValue> (269) 25
    GREATER_EQUAL <stringValue> (270) 23
    LPAREN <stringValue> (271) 31 43 53 55 58 59 73 85 93 97
    RPAREN <stringValue> (272) 31 43 53 55 58 59 73 85 93 98
    LCURLY <stringValue> (273) 67 69
    RCURLY <stringValue> (274) 67 69
    LSQUARE <stringValue> (275) 50 52 63 64
    RSQUARE <stringValue> (276) 50 52 63 64
    COLON <stringValue> (277) 67
    SEMICOLON <stringValue> (278) 6 11 12 15 97 99 100
    DCOLON <stringValue> (279) 47
    COMMA <stringValue> (280) 61 66 83
    PERIOD <stringValue> (281) 49 51
    DPERIOD <stringValue> (282) 59
    IF <stringValue> (283) 85
    ELSE <stringValue> (284) 86
    WHILE <stringValue> (285) 92
    FOR <stringValue> (286) 97
    FUNCTION <stringValue> (287) 72
    RETURN <stringValue> (288) 99 100
    AND <stringValue> (289) 28
    NOT <stringValue> (290) 33
    OR <stringValue> (291) 29
    LOCAL <stringValue> (292) 46
    ASSIGN <stringValue> (293) 39
    NIL <stringValue> (294) 79
    TRUE <stringValue> (295) 80
    FALSE <stringValue> (296) 81
    STRING <stringValue> (297) 78
    ID <stringValue> (298) 45 46 47 49 51 59 70 82 83
    INTEGER <intValue> (299) 76
    REAL <realValue> (300) 77
    BREAK <stmt_stmt> (301) 11
    CONTINUE <stmt_stmt> (302) 12
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    statements <stmt_stmt> (51)
        on left: 2 3
        on right: 1 69
    stmts <stmt_stmt> (52)
        on left: 4 5
        on right: 2 5
    stmt <stmt_stmt> (53)
        on left: 6 7 8 9 10 11 12 13 14 15
        on right: 4 5 87 88 91
    expr <expr> (54)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 6 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 39 50 52 60 61 67 85 93 97 99
    term <expr> (55)
        on left: 31 32 33 34 35 36 37 38
        on right: 30
    assignment <expr> (56)
        on left: 39
        on right: 16
    primary <expr> (57)
        on left: 40 41 42 43 44
        on right: 38
    lvalue <expr> (58)
        on left: 45 46 47 48
        on right: 34 35 36 37 39 40 49 50 54
    member <expr> (59)
        on left: 49 50 51 52
        on right: 48
    call <expr> (60)
        on left: 53 54 55
        on right: 41 51 52 53
    callsuffix <call> (61)
        on left: 56 57
        on right: 54
    normcall <call> (62)
        on left: 58
        on right: 56
    methodcall <call> (63)
        on left: 59
        on right: 57
    elist <expr> (64)
        on left: 60 61 62
        on right: 53 55 58 59 61 63 97 98
    objectdef <expr> (65)
        on left: 63 64
        on right: 42
    indexed <expr> (66)
        on left: 65 66
        on right: 64 66
    indexedelem <expr> (67)
        on left: 67
        on right: 65 66
    block <stmt_stmt> (68)
        on left: 69
        on right: 13 74
    $@1 (69)
        on left: 68
        on right: 69
    funcname <stringValue> (70)
        on left: 70 71
        on right: 72
    funcprefix <symbol> (71)
        on left: 72
        on right: 75
    funcargs (72)
        on left: 73
        on right: 75
    funcbody <uintValue> (73)
        on left: 74
        on right: 75
    funcdef <symbol> (74)
        on left: 75
        on right: 14 43 55
    const <expr> (75)
        on left: 76 77 78 79 80 81
        on right: 44
    idlist <symbol> (76)
        on left: 82 83 84
        on right: 73 83
    ifprefix <uintValue> (77)
        on left: 85
        on right: 87 88
    elseprefix <uintValue> (78)
        on left: 86
        on right: 87
    ifstmt <stmt_stmt> (79)
        on left: 87 88
        on right: 7
    loopstart (80)
        on left: 89
        on right: 91
    loopend (81)
        on left: 90
        on right: 91
    loopstmt <stmt_stmt> (82)
        on left: 91
        on right: 94 98
    whilestart <uintValue> (83)
        on left: 92
        on right: 94
    whilecond <uintValue> (84)
        on left: 93
        on right: 94
    whilestmt <stmt_stmt> (85)
        on left: 94
        on right: 8
    N_rule <uintValue> (86)
        on left: 95
        on right: 98
    M_rule <uintValue> (87)
        on left: 96
        on right: 97
    forprefix <_forprefix> (88)
        on left: 97
        on right: 98
    forstmt <stmt_stmt> (89)
        on left: 98
        on right: 9
    returnstmt <symbol> (90)
        on left: 99 100
        on right: 10


State 0

    0 $accept: . program $end

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22
    BREAK        shift, and go to state 23
    CONTINUE     shift, and go to state 24

    $default  reduce using rule 3 (statements)

    program     go to state 25
    statements  go to state 26
    stmts       go to state 27
    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 1

   32 term: SUB . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 48
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 2

   34 term: PLUS_PLUS . lvalue

    LPAREN  shift, and go to state 49
    DCOLON  shift, and go to state 8
    LOCAL   shift, and go to state 15
    ID      shift, and go to state 20

    lvalue  go to state 50
    member  go to state 34
    call    go to state 51


State 3

   36 term: MINUS_MINUS . lvalue

    LPAREN  shift, and go to state 49
    DCOLON  shift, and go to state 8
    LOCAL   shift, and go to state 15
    ID      shift, and go to state 20

    lvalue  go to state 52
    member  go to state 34
    call    go to state 51


State 4

   31 term: LPAREN . expr RPAREN
   43 primary: LPAREN . funcdef RPAREN
   55 call: LPAREN . funcdef RPAREN LPAREN elist RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    FUNCTION     shift, and go to state 12
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcprefix  go to state 38
    funcdef     go to state 54
    const       go to state 40


State 5

   69 block: LCURLY . $@1 statements RCURLY

    $default  reduce using rule 68 ($@1)

    $@1  go to state 55


State 6

   63 objectdef: LSQUARE . elist RSQUARE
   64          | LSQUARE . indexed RSQUARE

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 56
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    $default  reduce using rule 62 (elist)

    expr         go to state 57
    term         go to state 30
    assignment   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 58
    objectdef    go to state 36
    indexed      go to state 59
    indexedelem  go to state 60
    const        go to state 40


State 7

   15 stmt: SEMICOLON .

    $default  reduce using rule 15 (stmt)


State 8

   47 lvalue: DCOLON . ID

    ID  shift, and go to state 61


State 9

   85 ifprefix: IF . LPAREN expr RPAREN

    LPAREN  shift, and go to state 62


State 10

   92 whilestart: WHILE .

    $default  reduce using rule 92 (whilestart)


State 11

   97 forprefix: FOR . LPAREN elist SEMICOLON M_rule expr SEMICOLON

    LPAREN  shift, and go to state 63


State 12

   72 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 64

    $default  reduce using rule 71 (funcname)

    funcname  go to state 65


State 13

   99 returnstmt: RETURN . expr SEMICOLON
  100           | RETURN . SEMICOLON

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 66
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 67
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 14

   33 term: NOT . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 68
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 15

   46 lvalue: LOCAL . ID

    ID  shift, and go to state 69


State 16

   79 const: NIL .

    $default  reduce using rule 79 (const)


State 17

   80 const: TRUE .

    $default  reduce using rule 80 (const)


State 18

   81 const: FALSE .

    $default  reduce using rule 81 (const)


State 19

   78 const: STRING .

    $default  reduce using rule 78 (const)


State 20

   45 lvalue: ID .

    $default  reduce using rule 45 (lvalue)


State 21

   76 const: INTEGER .

    $default  reduce using rule 76 (const)


State 22

   77 const: REAL .

    $default  reduce using rule 77 (const)


State 23

   11 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 24

   12 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 25

    0 $accept: program . $end

    $end  shift, and go to state 72


State 26

    1 program: statements .

    $default  reduce using rule 1 (program)


State 27

    2 statements: stmts .
    5 stmts: stmts . stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22
    BREAK        shift, and go to state 23
    CONTINUE     shift, and go to state 24

    $default  reduce using rule 2 (statements)

    stmt        go to state 73
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 28

    4 stmts: stmt .

    $default  reduce using rule 4 (stmts)


State 29

    6 stmt: expr . SEMICOLON
   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    SEMICOLON      shift, and go to state 85
    AND            shift, and go to state 86
    OR             shift, and go to state 87


State 30

   30 expr: term .

    $default  reduce using rule 30 (expr)


State 31

   16 expr: assignment .

    $default  reduce using rule 16 (expr)


State 32

   38 term: primary .

    $default  reduce using rule 38 (term)


State 33

   35 term: lvalue . PLUS_PLUS
   37     | lvalue . MINUS_MINUS
   39 assignment: lvalue . ASSIGN expr
   40 primary: lvalue .
   49 member: lvalue . PERIOD ID
   50       | lvalue . LSQUARE expr RSQUARE
   54 call: lvalue . callsuffix

    PLUS_PLUS    shift, and go to state 88
    MINUS_MINUS  shift, and go to state 89
    LPAREN       shift, and go to state 90
    LSQUARE      shift, and go to state 91
    PERIOD       shift, and go to state 92
    DPERIOD      shift, and go to state 93
    ASSIGN       shift, and go to state 94

    $default  reduce using rule 40 (primary)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 34

   48 lvalue: member .

    $default  reduce using rule 48 (lvalue)


State 35

   41 primary: call .
   51 member: call . PERIOD ID
   52       | call . LSQUARE expr RSQUARE
   53 call: call . LPAREN elist RPAREN

    LPAREN   shift, and go to state 98
    LSQUARE  shift, and go to state 99
    PERIOD   shift, and go to state 100

    $default  reduce using rule 41 (primary)


State 36

   42 primary: objectdef .

    $default  reduce using rule 42 (primary)


State 37

   13 stmt: block .

    $default  reduce using rule 13 (stmt)


State 38

   75 funcdef: funcprefix . funcargs funcbody

    LPAREN  shift, and go to state 101

    funcargs  go to state 102


State 39

   14 stmt: funcdef .

    $default  reduce using rule 14 (stmt)


State 40

   44 primary: const .

    $default  reduce using rule 44 (primary)


State 41

   87 ifstmt: ifprefix . stmt elseprefix stmt
   88       | ifprefix . stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22
    BREAK        shift, and go to state 23
    CONTINUE     shift, and go to state 24

    stmt        go to state 103
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 42

    7 stmt: ifstmt .

    $default  reduce using rule 7 (stmt)


State 43

   94 whilestmt: whilestart . whilecond loopstmt

    LPAREN  shift, and go to state 104

    whilecond  go to state 105


State 44

    8 stmt: whilestmt .

    $default  reduce using rule 8 (stmt)


State 45

   98 forstmt: forprefix . N_rule elist RPAREN N_rule loopstmt N_rule

    $default  reduce using rule 95 (N_rule)

    N_rule  go to state 106


State 46

    9 stmt: forstmt .

    $default  reduce using rule 9 (stmt)


State 47

   10 stmt: returnstmt .

    $default  reduce using rule 10 (stmt)


State 48

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   32 term: SUB expr .

    $default  reduce using rule 32 (term)


State 49

   55 call: LPAREN . funcdef RPAREN LPAREN elist RPAREN

    FUNCTION  shift, and go to state 12

    funcprefix  go to state 38
    funcdef     go to state 107


State 50

   34 term: PLUS_PLUS lvalue .
   49 member: lvalue . PERIOD ID
   50       | lvalue . LSQUARE expr RSQUARE
   54 call: lvalue . callsuffix

    LPAREN   shift, and go to state 90
    LSQUARE  shift, and go to state 91
    PERIOD   shift, and go to state 92
    DPERIOD  shift, and go to state 93

    $default  reduce using rule 34 (term)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 51

   51 member: call . PERIOD ID
   52       | call . LSQUARE expr RSQUARE
   53 call: call . LPAREN elist RPAREN

    LPAREN   shift, and go to state 98
    LSQUARE  shift, and go to state 99
    PERIOD   shift, and go to state 100


State 52

   36 term: MINUS_MINUS lvalue .
   49 member: lvalue . PERIOD ID
   50       | lvalue . LSQUARE expr RSQUARE
   54 call: lvalue . callsuffix

    LPAREN   shift, and go to state 90
    LSQUARE  shift, and go to state 91
    PERIOD   shift, and go to state 92
    DPERIOD  shift, and go to state 93

    $default  reduce using rule 36 (term)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 53

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   31 term: LPAREN expr . RPAREN

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    RPAREN         shift, and go to state 108
    AND            shift, and go to state 86
    OR             shift, and go to state 87


State 54

   43 primary: LPAREN funcdef . RPAREN
   55 call: LPAREN funcdef . RPAREN LPAREN elist RPAREN

    RPAREN  shift, and go to state 109


State 55

   69 block: LCURLY $@1 . statements RCURLY

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22
    BREAK        shift, and go to state 23
    CONTINUE     shift, and go to state 24

    $default  reduce using rule 3 (statements)

    statements  go to state 110
    stmts       go to state 27
    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 56

   67 indexedelem: LCURLY . expr COLON expr RCURLY

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 111
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 57

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   60 elist: expr .
   61      | expr . COMMA elist

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    COMMA          shift, and go to state 112
    AND            shift, and go to state 86
    OR             shift, and go to state 87

    $default  reduce using rule 60 (elist)


State 58

   63 objectdef: LSQUARE elist . RSQUARE

    RSQUARE  shift, and go to state 113


State 59

   64 objectdef: LSQUARE indexed . RSQUARE

    RSQUARE  shift, and go to state 114


State 60

   65 indexed: indexedelem .
   66        | indexedelem . COMMA indexed

    COMMA  shift, and go to state 115

    $default  reduce using rule 65 (indexed)


State 61

   47 lvalue: DCOLON ID .

    $default  reduce using rule 47 (lvalue)


State 62

   85 ifprefix: IF LPAREN . expr RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 116
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 63

   97 forprefix: FOR LPAREN . elist SEMICOLON M_rule expr SEMICOLON

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    $default  reduce using rule 62 (elist)

    expr        go to state 57
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 117
    objectdef   go to state 36
    const       go to state 40


State 64

   70 funcname: ID .

    $default  reduce using rule 70 (funcname)


State 65

   72 funcprefix: FUNCTION funcname .

    $default  reduce using rule 72 (funcprefix)


State 66

  100 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 100 (returnstmt)


State 67

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   99 returnstmt: RETURN expr . SEMICOLON

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    SEMICOLON      shift, and go to state 118
    AND            shift, and go to state 86
    OR             shift, and go to state 87


State 68

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   33 term: NOT expr .

    $default  reduce using rule 33 (term)


State 69

   46 lvalue: LOCAL ID .

    $default  reduce using rule 46 (lvalue)


State 70

   11 stmt: BREAK SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 71

   12 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 72

    0 $accept: program $end .

    $default  accept


State 73

    5 stmts: stmts stmt .

    $default  reduce using rule 5 (stmts)


State 74

   17 expr: expr ADD . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 119
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 75

   18 expr: expr SUB . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 120
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 76

   19 expr: expr MUL . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 121
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 77

   20 expr: expr DIV . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 122
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 78

   21 expr: expr MODULO . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 123
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 79

   26 expr: expr EQUAL . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 124
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 80

   27 expr: expr NOT_EQUAL . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 125
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 81

   22 expr: expr GREATER . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 126
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 82

   24 expr: expr LESSER . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 127
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 83

   25 expr: expr LESSER_EQUAL . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 128
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 84

   23 expr: expr GREATER_EQUAL . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 129
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 85

    6 stmt: expr SEMICOLON .

    $default  reduce using rule 6 (stmt)


State 86

   28 expr: expr AND . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 130
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 87

   29 expr: expr OR . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 131
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 88

   35 term: lvalue PLUS_PLUS .

    $default  reduce using rule 35 (term)


State 89

   37 term: lvalue MINUS_MINUS .

    $default  reduce using rule 37 (term)


State 90

   58 normcall: LPAREN . elist RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    $default  reduce using rule 62 (elist)

    expr        go to state 57
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 132
    objectdef   go to state 36
    const       go to state 40


State 91

   50 member: lvalue LSQUARE . expr RSQUARE

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 133
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 92

   49 member: lvalue PERIOD . ID

    ID  shift, and go to state 134


State 93

   59 methodcall: DPERIOD . ID LPAREN elist RPAREN

    ID  shift, and go to state 135


State 94

   39 assignment: lvalue ASSIGN . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 136
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 95

   54 call: lvalue callsuffix .

    $default  reduce using rule 54 (call)


State 96

   56 callsuffix: normcall .

    $default  reduce using rule 56 (callsuffix)


State 97

   57 callsuffix: methodcall .

    $default  reduce using rule 57 (callsuffix)


State 98

   53 call: call LPAREN . elist RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    $default  reduce using rule 62 (elist)

    expr        go to state 57
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 137
    objectdef   go to state 36
    const       go to state 40


State 99

   52 member: call LSQUARE . expr RSQUARE

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 138
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 100

   51 member: call PERIOD . ID

    ID  shift, and go to state 139


State 101

   73 funcargs: LPAREN . idlist RPAREN

    ID  shift, and go to state 140

    $default  reduce using rule 84 (idlist)

    idlist  go to state 141


State 102

   75 funcdef: funcprefix funcargs . funcbody

    LCURLY  shift, and go to state 5

    block     go to state 142
    funcbody  go to state 143


State 103

   87 ifstmt: ifprefix stmt . elseprefix stmt
   88       | ifprefix stmt .

    ELSE  shift, and go to state 144

    ELSE      [reduce using rule 88 (ifstmt)]
    $default  reduce using rule 88 (ifstmt)

    elseprefix  go to state 145


State 104

   93 whilecond: LPAREN . expr RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 146
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 105

   94 whilestmt: whilestart whilecond . loopstmt

    $default  reduce using rule 89 (loopstart)

    loopstart  go to state 147
    loopstmt   go to state 148


State 106

   98 forstmt: forprefix N_rule . elist RPAREN N_rule loopstmt N_rule

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    $default  reduce using rule 62 (elist)

    expr        go to state 57
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 149
    objectdef   go to state 36
    const       go to state 40


State 107

   55 call: LPAREN funcdef . RPAREN LPAREN elist RPAREN

    RPAREN  shift, and go to state 150


State 108

   31 term: LPAREN expr RPAREN .

    $default  reduce using rule 31 (term)


State 109

   43 primary: LPAREN funcdef RPAREN .
   55 call: LPAREN funcdef RPAREN . LPAREN elist RPAREN

    LPAREN  shift, and go to state 151

    $default  reduce using rule 43 (primary)


State 110

   69 block: LCURLY $@1 statements . RCURLY

    RCURLY  shift, and go to state 152


State 111

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   67 indexedelem: LCURLY expr . COLON expr RCURLY

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    COLON          shift, and go to state 153
    AND            shift, and go to state 86
    OR             shift, and go to state 87


State 112

   61 elist: expr COMMA . elist

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    $default  reduce using rule 62 (elist)

    expr        go to state 57
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 154
    objectdef   go to state 36
    const       go to state 40


State 113

   63 objectdef: LSQUARE elist RSQUARE .

    $default  reduce using rule 63 (objectdef)


State 114

   64 objectdef: LSQUARE indexed RSQUARE .

    $default  reduce using rule 64 (objectdef)


State 115

   66 indexed: indexedelem COMMA . indexed

    LCURLY  shift, and go to state 56

    indexed      go to state 155
    indexedelem  go to state 60


State 116

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   85 ifprefix: IF LPAREN expr . RPAREN

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    RPAREN         shift, and go to state 156
    AND            shift, and go to state 86
    OR             shift, and go to state 87


State 117

   97 forprefix: FOR LPAREN elist . SEMICOLON M_rule expr SEMICOLON

    SEMICOLON  shift, and go to state 157


State 118

   99 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 99 (returnstmt)


State 119

   17 expr: expr . ADD expr
   17     | expr ADD expr .
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MODULO  shift, and go to state 78

    $default  reduce using rule 17 (expr)


State 120

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   18     | expr SUB expr .
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MODULO  shift, and go to state 78

    $default  reduce using rule 18 (expr)


State 121

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   19     | expr MUL expr .
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 122

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   20     | expr DIV expr .
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 123

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   21     | expr MODULO expr .
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 21 (expr)


State 124

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   26     | expr EQUAL expr .
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 125

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   27     | expr NOT_EQUAL expr .
   28     | expr . AND expr
   29     | expr . OR expr

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 126

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   22     | expr GREATER expr .
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    ADD     shift, and go to state 74
    SUB     shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MODULO  shift, and go to state 78

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 127

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   24     | expr LESSER expr .
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    ADD     shift, and go to state 74
    SUB     shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MODULO  shift, and go to state 78

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 128

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   25     | expr LESSER_EQUAL expr .
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    ADD     shift, and go to state 74
    SUB     shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MODULO  shift, and go to state 78

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 129

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   23     | expr GREATER_EQUAL expr .
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    ADD     shift, and go to state 74
    SUB     shift, and go to state 75
    MUL     shift, and go to state 76
    DIV     shift, and go to state 77
    MODULO  shift, and go to state 78

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 130

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   28     | expr AND expr .
   29     | expr . OR expr

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84

    $default  reduce using rule 28 (expr)


State 131

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   29     | expr OR expr .

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    AND            shift, and go to state 86

    $default  reduce using rule 29 (expr)


State 132

   58 normcall: LPAREN elist . RPAREN

    RPAREN  shift, and go to state 158


State 133

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   50 member: lvalue LSQUARE expr . RSQUARE

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    RSQUARE        shift, and go to state 159
    AND            shift, and go to state 86
    OR             shift, and go to state 87


State 134

   49 member: lvalue PERIOD ID .

    $default  reduce using rule 49 (member)


State 135

   59 methodcall: DPERIOD ID . LPAREN elist RPAREN

    LPAREN  shift, and go to state 160


State 136

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   39 assignment: lvalue ASSIGN expr .

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    AND            shift, and go to state 86
    OR             shift, and go to state 87

    $default  reduce using rule 39 (assignment)


State 137

   53 call: call LPAREN elist . RPAREN

    RPAREN  shift, and go to state 161


State 138

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   52 member: call LSQUARE expr . RSQUARE

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    RSQUARE        shift, and go to state 162
    AND            shift, and go to state 86
    OR             shift, and go to state 87


State 139

   51 member: call PERIOD ID .

    $default  reduce using rule 51 (member)


State 140

   82 idlist: ID .

    $default  reduce using rule 82 (idlist)


State 141

   73 funcargs: LPAREN idlist . RPAREN
   83 idlist: idlist . COMMA ID

    RPAREN  shift, and go to state 163
    COMMA   shift, and go to state 164


State 142

   74 funcbody: block .

    $default  reduce using rule 74 (funcbody)


State 143

   75 funcdef: funcprefix funcargs funcbody .

    $default  reduce using rule 75 (funcdef)


State 144

   86 elseprefix: ELSE .

    $default  reduce using rule 86 (elseprefix)


State 145

   87 ifstmt: ifprefix stmt elseprefix . stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22
    BREAK        shift, and go to state 23
    CONTINUE     shift, and go to state 24

    stmt        go to state 165
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 146

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   93 whilecond: LPAREN expr . RPAREN

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    RPAREN         shift, and go to state 166
    AND            shift, and go to state 86
    OR             shift, and go to state 87


State 147

   91 loopstmt: loopstart . stmt loopend

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22
    BREAK        shift, and go to state 23
    CONTINUE     shift, and go to state 24

    stmt        go to state 167
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    ifstmt      go to state 42
    whilestart  go to state 43
    whilestmt   go to state 44
    forprefix   go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


State 148

   94 whilestmt: whilestart whilecond loopstmt .

    $default  reduce using rule 94 (whilestmt)


State 149

   98 forstmt: forprefix N_rule elist . RPAREN N_rule loopstmt N_rule

    RPAREN  shift, and go to state 168


State 150

   55 call: LPAREN funcdef RPAREN . LPAREN elist RPAREN

    LPAREN  shift, and go to state 151


State 151

   55 call: LPAREN funcdef RPAREN LPAREN . elist RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    $default  reduce using rule 62 (elist)

    expr        go to state 57
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 169
    objectdef   go to state 36
    const       go to state 40


State 152

   69 block: LCURLY $@1 statements RCURLY .

    $default  reduce using rule 69 (block)


State 153

   67 indexedelem: LCURLY expr COLON . expr RCURLY

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 170
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 154

   61 elist: expr COMMA elist .

    $default  reduce using rule 61 (elist)


State 155

   66 indexed: indexedelem COMMA indexed .

    $default  reduce using rule 66 (indexed)


State 156

   85 ifprefix: IF LPAREN expr RPAREN .

    $default  reduce using rule 85 (ifprefix)


State 157

   97 forprefix: FOR LPAREN elist SEMICOLON . M_rule expr SEMICOLON

    $default  reduce using rule 96 (M_rule)

    M_rule  go to state 171


State 158

   58 normcall: LPAREN elist RPAREN .

    $default  reduce using rule 58 (normcall)


State 159

   50 member: lvalue LSQUARE expr RSQUARE .

    $default  reduce using rule 50 (member)


State 160

   59 methodcall: DPERIOD ID LPAREN . elist RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    $default  reduce using rule 62 (elist)

    expr        go to state 57
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 172
    objectdef   go to state 36
    const       go to state 40


State 161

   53 call: call LPAREN elist RPAREN .

    $default  reduce using rule 53 (call)


State 162

   52 member: call LSQUARE expr RSQUARE .

    $default  reduce using rule 52 (member)


State 163

   73 funcargs: LPAREN idlist RPAREN .

    $default  reduce using rule 73 (funcargs)


State 164

   83 idlist: idlist COMMA . ID

    ID  shift, and go to state 173


State 165

   87 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 87 (ifstmt)


State 166

   93 whilecond: LPAREN expr RPAREN .

    $default  reduce using rule 93 (whilecond)


State 167

   91 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 90 (loopend)

    loopend  go to state 174


State 168

   98 forstmt: forprefix N_rule elist RPAREN . N_rule loopstmt N_rule

    $default  reduce using rule 95 (N_rule)

    N_rule  go to state 175


State 169

   55 call: LPAREN funcdef RPAREN LPAREN elist . RPAREN

    RPAREN  shift, and go to state 176


State 170

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   67 indexedelem: LCURLY expr COLON expr . RCURLY

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    RCURLY         shift, and go to state 177
    AND            shift, and go to state 86
    OR             shift, and go to state 87


State 171

   97 forprefix: FOR LPAREN elist SEMICOLON M_rule . expr SEMICOLON

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 14
    LOCAL        shift, and go to state 15
    NIL          shift, and go to state 16
    TRUE         shift, and go to state 17
    FALSE        shift, and go to state 18
    STRING       shift, and go to state 19
    ID           shift, and go to state 20
    INTEGER      shift, and go to state 21
    REAL         shift, and go to state 22

    expr        go to state 178
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 172

   59 methodcall: DPERIOD ID LPAREN elist . RPAREN

    RPAREN  shift, and go to state 179


State 173

   83 idlist: idlist COMMA ID .

    $default  reduce using rule 83 (idlist)


State 174

   91 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 91 (loopstmt)


State 175

   98 forstmt: forprefix N_rule elist RPAREN N_rule . loopstmt N_rule

    $default  reduce using rule 89 (loopstart)

    loopstart  go to state 147
    loopstmt   go to state 180


State 176

   55 call: LPAREN funcdef RPAREN LPAREN elist RPAREN .

    $default  reduce using rule 55 (call)


State 177

   67 indexedelem: LCURLY expr COLON expr RCURLY .

    $default  reduce using rule 67 (indexedelem)


State 178

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MODULO expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESSER expr
   25     | expr . LESSER_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOT_EQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   97 forprefix: FOR LPAREN elist SEMICOLON M_rule expr . SEMICOLON

    ADD            shift, and go to state 74
    SUB            shift, and go to state 75
    MUL            shift, and go to state 76
    DIV            shift, and go to state 77
    MODULO         shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESSER         shift, and go to state 82
    LESSER_EQUAL   shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    SEMICOLON      shift, and go to state 181
    AND            shift, and go to state 86
    OR             shift, and go to state 87


State 179

   59 methodcall: DPERIOD ID LPAREN elist RPAREN .

    $default  reduce using rule 59 (methodcall)


State 180

   98 forstmt: forprefix N_rule elist RPAREN N_rule loopstmt . N_rule

    $default  reduce using rule 95 (N_rule)

    N_rule  go to state 182


State 181

   97 forprefix: FOR LPAREN elist SEMICOLON M_rule expr SEMICOLON .

    $default  reduce using rule 97 (forprefix)


State 182

   98 forstmt: forprefix N_rule elist RPAREN N_rule loopstmt N_rule .

    $default  reduce using rule 98 (forstmt)
