State 152 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements
    2        | /* empty */

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignment
   14     | expr ADD expr
   15     | expr MUL expr
   16     | expr DIV expr
   17     | expr MODULO expr
   18     | expr GREATER expr
   19     | expr GREATER_EQUAL expr
   20     | expr LESSER expr
   21     | expr LESSER_EQUAL expr
   22     | expr EQUAL expr
   23     | expr NOT_EQUAL expr
   24     | expr AND expr
   25     | expr OR expr
   26     | term

   27 term: LPAREN expr RPAREN
   28     | SUB expr
   29     | NOT expr
   30     | PLUS_PLUS lvalue
   31     | lvalue PLUS_PLUS
   32     | MINUS_MINUS lvalue
   33     | lvalue MINUS_MINUS
   34     | primary

   35 assignment: lvalue ASSIGN expr

   36 primary: lvalue
   37        | call
   38        | objectdef
   39        | LPAREN funcdef RPAREN
   40        | const

   41 lvalue: ID
   42       | LOCAL ID
   43       | DCOLON ID
   44       | member

   45 member: lvalue PERIOD ID
   46       | lvalue LSQUARE expr RSQUARE
   47       | call PERIOD ID
   48       | call LSQUARE expr RSQUARE

   49 call: call LPAREN elist RPAREN
   50     | lvalue callsuffix
   51     | LPAREN funcdef RPAREN LPAREN elist RPAREN

   52 callsuffix: normcall
   53           | methodcall

   54 normcall: LPAREN elist RPAREN

   55 methodcall: DPERIOD ID LPAREN elist RPAREN

   56 elist: expr
   57      | expr COMMA expr

   58 $@1: /* empty */

   59 objectdef: LSQUARE $@1 RSQUARE
   60          | LSQUARE elist RSQUARE
   61          | LSQUARE indexed RSQUARE

   62 indexed: indexedelem
   63        | indexedelem COMMA indexedelem

   64 indexedelem: LCURLY expr COLON expr RCURLY

   65 block: LCURLY statements RCURLY

   66 funcdef: FUNCTION ID LPAREN idlist RPAREN block
   67        | FUNCTION LPAREN idlist RPAREN

   68 const: INTEGER
   69      | REAL
   70      | STRING
   71      | NIL
   72      | TRUE
   73      | FALSE

   74 idlist: ID
   75       | ID COMMA ID
   76       | /* empty */

   77 ifstmt: IF LPAREN expr RPAREN stmt ELSE stmt
   78       | IF LPAREN expr RPAREN stmt

   79 whilestmt: WHILE LPAREN expr RPAREN stmt

   80 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist SEMICOLON RPAREN stmt

   81 returnstmt: RETURN expr SEMICOLON
   82           | RETURN SEMICOLON

   83 statements: statements stmt
   84           | stmt


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 14
SUB (259) 28
MUL (260) 15
DIV (261) 16
PLUS_PLUS (262) 30 31
MINUS_MINUS (263) 32 33
MODULO (264) 17
EQUAL (265) 22
NOT_EQUAL (266) 23
GREATER (267) 18
LESSER (268) 20
LESSER_EQUAL (269) 21
GREATER_EQUAL (270) 19
LPAREN (271) 27 39 49 51 54 55 66 67 77 78 79 80
RPAREN (272) 27 39 49 51 54 55 66 67 77 78 79 80
LCURLY (273) 64 65
RCURLY (274) 64 65
LSQUARE (275) 46 48 59 60 61
RSQUARE (276) 46 48 59 60 61
COLON (277) 64
SEMICOLON (278) 3 8 9 12 80 81 82
DCOLON (279) 43
COMMA (280) 57 63 75
PERIOD (281) 45 47
DPERIOD (282) 55
IF (283) 77 78
ELSE (284) 77
WHILE (285) 79
FOR (286) 80
FUNCTION (287) 66 67
RETURN (288) 81 82
BREAK (289) 8
CONTINUE (290) 9
AND (291) 24
NOT (292) 29
OR (293) 25
LOCAL (294) 42
ASSIGN (295) 35
ID (296) 41 42 43 45 47 55 66 74 75
INTEGER (297) 68
REAL (298) 69
NIL (299) 71
TRUE (300) 72
FALSE (301) 73
STRING (302) 70
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0
stmt (51)
    on left: 3 4 5 6 7 8 9 10 11 12, on right: 77 78 79 80 83 84
expr (52)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26, on right: 3
    14 15 16 17 18 19 20 21 22 23 24 25 27 28 29 35 46 48 56 57 64
    77 78 79 80 81
term (53)
    on left: 27 28 29 30 31 32 33 34, on right: 26
assignment (54)
    on left: 35, on right: 13
primary (55)
    on left: 36 37 38 39 40, on right: 34
lvalue (56)
    on left: 41 42 43 44, on right: 30 31 32 33 35 36 45 46 50
member (57)
    on left: 45 46 47 48, on right: 44
call (58)
    on left: 49 50 51, on right: 37 47 48 49
callsuffix (59)
    on left: 52 53, on right: 50
normcall (60)
    on left: 54, on right: 52
methodcall (61)
    on left: 55, on right: 53
elist (62)
    on left: 56 57, on right: 49 51 54 55 60 80
objectdef (63)
    on left: 59 60 61, on right: 38
$@1 (64)
    on left: 58, on right: 59
indexed (65)
    on left: 62 63, on right: 61
indexedelem (66)
    on left: 64, on right: 62 63
block (67)
    on left: 65, on right: 10 66
funcdef (68)
    on left: 66 67, on right: 11 39 51
const (69)
    on left: 68 69 70 71 72 73, on right: 40
idlist (70)
    on left: 74 75 76, on right: 66 67
ifstmt (71)
    on left: 77 78, on right: 4
whilestmt (72)
    on left: 79, on right: 5
forstmt (73)
    on left: 80, on right: 6
returnstmt (74)
    on left: 81 82, on right: 7
statements (75)
    on left: 83 84, on right: 1 65 83


state 0

    0 $accept: . program $end

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    BREAK        shift, and go to state 14
    CONTINUE     shift, and go to state 15
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41
    statements  go to state 42


state 1

   28 term: SUB . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 43
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 2

   30 term: PLUS_PLUS . lvalue

    LPAREN  shift, and go to state 44
    DCOLON  shift, and go to state 8
    LOCAL   shift, and go to state 17
    ID      shift, and go to state 18

    lvalue  go to state 45
    member  go to state 32
    call    go to state 46


state 3

   32 term: MINUS_MINUS . lvalue

    LPAREN  shift, and go to state 44
    DCOLON  shift, and go to state 8
    LOCAL   shift, and go to state 17
    ID      shift, and go to state 18

    lvalue  go to state 47
    member  go to state 32
    call    go to state 46


state 4

   27 term: LPAREN . expr RPAREN
   39 primary: LPAREN . funcdef RPAREN
   51 call: LPAREN . funcdef RPAREN LPAREN elist RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    FUNCTION     shift, and go to state 12
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 48
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 49
    const       go to state 37


state 5

   65 block: LCURLY . statements RCURLY

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    BREAK        shift, and go to state 14
    CONTINUE     shift, and go to state 15
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41
    statements  go to state 50


state 6

   59 objectdef: LSQUARE . $@1 RSQUARE
   60          | LSQUARE . elist RSQUARE
   61          | LSQUARE . indexed RSQUARE

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 51
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    $default  reduce using rule 58 ($@1)

    expr         go to state 52
    term         go to state 28
    assignment   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 53
    objectdef    go to state 34
    $@1          go to state 54
    indexed      go to state 55
    indexedelem  go to state 56
    const        go to state 37


state 7

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


state 8

   43 lvalue: DCOLON . ID

    ID  shift, and go to state 57


state 9

   77 ifstmt: IF . LPAREN expr RPAREN stmt ELSE stmt
   78       | IF . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 58


state 10

   79 whilestmt: WHILE . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 59


state 11

   80 forstmt: FOR . LPAREN elist SEMICOLON expr SEMICOLON elist SEMICOLON RPAREN stmt

    LPAREN  shift, and go to state 60


state 12

   66 funcdef: FUNCTION . ID LPAREN idlist RPAREN block
   67        | FUNCTION . LPAREN idlist RPAREN

    LPAREN  shift, and go to state 61
    ID      shift, and go to state 62


state 13

   81 returnstmt: RETURN . expr SEMICOLON
   82           | RETURN . SEMICOLON

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 63
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 64
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 14

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 65


state 15

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 66


state 16

   29 term: NOT . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 67
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 17

   42 lvalue: LOCAL . ID

    ID  shift, and go to state 68


state 18

   41 lvalue: ID .

    $default  reduce using rule 41 (lvalue)


state 19

   68 const: INTEGER .

    $default  reduce using rule 68 (const)


state 20

   69 const: REAL .

    $default  reduce using rule 69 (const)


state 21

   71 const: NIL .

    $default  reduce using rule 71 (const)


state 22

   72 const: TRUE .

    $default  reduce using rule 72 (const)


state 23

   73 const: FALSE .

    $default  reduce using rule 73 (const)


state 24

   70 const: STRING .

    $default  reduce using rule 70 (const)


state 25

    0 $accept: program . $end

    $end  shift, and go to state 69


state 26

   84 statements: stmt .

    $default  reduce using rule 84 (statements)


state 27

    3 stmt: expr . SEMICOLON
   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    SEMICOLON      shift, and go to state 80
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 28

   26 expr: term .

    $default  reduce using rule 26 (expr)


state 29

   13 expr: assignment .

    $default  reduce using rule 13 (expr)


state 30

   34 term: primary .

    $default  reduce using rule 34 (term)


state 31

   31 term: lvalue . PLUS_PLUS
   33     | lvalue . MINUS_MINUS
   35 assignment: lvalue . ASSIGN expr
   36 primary: lvalue .
   45 member: lvalue . PERIOD ID
   46       | lvalue . LSQUARE expr RSQUARE
   50 call: lvalue . callsuffix

    PLUS_PLUS    shift, and go to state 83
    MINUS_MINUS  shift, and go to state 84
    LPAREN       shift, and go to state 85
    LSQUARE      shift, and go to state 86
    PERIOD       shift, and go to state 87
    DPERIOD      shift, and go to state 88
    ASSIGN       shift, and go to state 89

    $default  reduce using rule 36 (primary)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


state 32

   44 lvalue: member .

    $default  reduce using rule 44 (lvalue)


state 33

   37 primary: call .
   47 member: call . PERIOD ID
   48       | call . LSQUARE expr RSQUARE
   49 call: call . LPAREN elist RPAREN

    LPAREN   shift, and go to state 93
    LSQUARE  shift, and go to state 94
    PERIOD   shift, and go to state 95

    $default  reduce using rule 37 (primary)


state 34

   38 primary: objectdef .

    $default  reduce using rule 38 (primary)


state 35

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


state 36

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


state 37

   40 primary: const .

    $default  reduce using rule 40 (primary)


state 38

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


state 39

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


state 40

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


state 41

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


state 42

    1 program: statements .
   83 statements: statements . stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    BREAK        shift, and go to state 14
    CONTINUE     shift, and go to state 15
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt        go to state 96
    expr        go to state 27
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


state 43

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   28 term: SUB expr .

    $default  reduce using rule 28 (term)


state 44

   51 call: LPAREN . funcdef RPAREN LPAREN elist RPAREN

    FUNCTION  shift, and go to state 12

    funcdef  go to state 97


state 45

   30 term: PLUS_PLUS lvalue .
   45 member: lvalue . PERIOD ID
   46       | lvalue . LSQUARE expr RSQUARE
   50 call: lvalue . callsuffix

    LPAREN   shift, and go to state 85
    LSQUARE  shift, and go to state 86
    PERIOD   shift, and go to state 87
    DPERIOD  shift, and go to state 88

    $default  reduce using rule 30 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


state 46

   47 member: call . PERIOD ID
   48       | call . LSQUARE expr RSQUARE
   49 call: call . LPAREN elist RPAREN

    LPAREN   shift, and go to state 93
    LSQUARE  shift, and go to state 94
    PERIOD   shift, and go to state 95


state 47

   32 term: MINUS_MINUS lvalue .
   45 member: lvalue . PERIOD ID
   46       | lvalue . LSQUARE expr RSQUARE
   50 call: lvalue . callsuffix

    LPAREN   shift, and go to state 85
    LSQUARE  shift, and go to state 86
    PERIOD   shift, and go to state 87
    DPERIOD  shift, and go to state 88

    $default  reduce using rule 32 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


state 48

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   27 term: LPAREN expr . RPAREN

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RPAREN         shift, and go to state 98
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 49

   39 primary: LPAREN funcdef . RPAREN
   51 call: LPAREN funcdef . RPAREN LPAREN elist RPAREN

    RPAREN  shift, and go to state 99


state 50

   65 block: LCURLY statements . RCURLY
   83 statements: statements . stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    RCURLY       shift, and go to state 100
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    BREAK        shift, and go to state 14
    CONTINUE     shift, and go to state 15
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    stmt        go to state 96
    expr        go to state 27
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


state 51

   64 indexedelem: LCURLY . expr COLON expr RCURLY

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 101
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 52

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   56 elist: expr .
   57      | expr . COMMA expr

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    COMMA          shift, and go to state 102
    AND            shift, and go to state 81
    OR             shift, and go to state 82

    $default  reduce using rule 56 (elist)


state 53

   60 objectdef: LSQUARE elist . RSQUARE

    RSQUARE  shift, and go to state 103


state 54

   59 objectdef: LSQUARE $@1 . RSQUARE

    RSQUARE  shift, and go to state 104


state 55

   61 objectdef: LSQUARE indexed . RSQUARE

    RSQUARE  shift, and go to state 105


state 56

   62 indexed: indexedelem .
   63        | indexedelem . COMMA indexedelem

    COMMA  shift, and go to state 106

    $default  reduce using rule 62 (indexed)


state 57

   43 lvalue: DCOLON ID .

    $default  reduce using rule 43 (lvalue)


state 58

   77 ifstmt: IF LPAREN . expr RPAREN stmt ELSE stmt
   78       | IF LPAREN . expr RPAREN stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 107
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 59

   79 whilestmt: WHILE LPAREN . expr RPAREN stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 108
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 60

   80 forstmt: FOR LPAREN . elist SEMICOLON expr SEMICOLON elist SEMICOLON RPAREN stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 109
    objectdef   go to state 34
    const       go to state 37


state 61

   67 funcdef: FUNCTION LPAREN . idlist RPAREN

    ID  shift, and go to state 110

    $default  reduce using rule 76 (idlist)

    idlist  go to state 111


state 62

   66 funcdef: FUNCTION ID . LPAREN idlist RPAREN block

    LPAREN  shift, and go to state 112


state 63

   82 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 82 (returnstmt)


state 64

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   81 returnstmt: RETURN expr . SEMICOLON

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    SEMICOLON      shift, and go to state 113
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 65

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


state 66

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


state 67

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   29 term: NOT expr .

    $default  reduce using rule 29 (term)


state 68

   42 lvalue: LOCAL ID .

    $default  reduce using rule 42 (lvalue)


state 69

    0 $accept: program $end .

    $default  accept


state 70

   14 expr: expr ADD . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 114
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 71

   15 expr: expr MUL . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 115
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 72

   16 expr: expr DIV . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 116
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 73

   17 expr: expr MODULO . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 117
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 74

   22 expr: expr EQUAL . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 118
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 75

   23 expr: expr NOT_EQUAL . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 119
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 76

   18 expr: expr GREATER . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 120
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 77

   20 expr: expr LESSER . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 121
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 78

   21 expr: expr LESSER_EQUAL . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 122
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 79

   19 expr: expr GREATER_EQUAL . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 123
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 80

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


state 81

   24 expr: expr AND . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 124
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 82

   25 expr: expr OR . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 125
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 83

   31 term: lvalue PLUS_PLUS .

    $default  reduce using rule 31 (term)


state 84

   33 term: lvalue MINUS_MINUS .

    $default  reduce using rule 33 (term)


state 85

   54 normcall: LPAREN . elist RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 126
    objectdef   go to state 34
    const       go to state 37


state 86

   46 member: lvalue LSQUARE . expr RSQUARE

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 127
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 87

   45 member: lvalue PERIOD . ID

    ID  shift, and go to state 128


state 88

   55 methodcall: DPERIOD . ID LPAREN elist RPAREN

    ID  shift, and go to state 129


state 89

   35 assignment: lvalue ASSIGN . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 130
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 90

   50 call: lvalue callsuffix .

    $default  reduce using rule 50 (call)


state 91

   52 callsuffix: normcall .

    $default  reduce using rule 52 (callsuffix)


state 92

   53 callsuffix: methodcall .

    $default  reduce using rule 53 (callsuffix)


state 93

   49 call: call LPAREN . elist RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 131
    objectdef   go to state 34
    const       go to state 37


state 94

   48 member: call LSQUARE . expr RSQUARE

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 132
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 95

   47 member: call PERIOD . ID

    ID  shift, and go to state 133


state 96

   83 statements: statements stmt .

    $default  reduce using rule 83 (statements)


state 97

   51 call: LPAREN funcdef . RPAREN LPAREN elist RPAREN

    RPAREN  shift, and go to state 134


state 98

   27 term: LPAREN expr RPAREN .

    $default  reduce using rule 27 (term)


state 99

   39 primary: LPAREN funcdef RPAREN .
   51 call: LPAREN funcdef RPAREN . LPAREN elist RPAREN

    LPAREN  shift, and go to state 135

    $default  reduce using rule 39 (primary)


state 100

   65 block: LCURLY statements RCURLY .

    $default  reduce using rule 65 (block)


state 101

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   64 indexedelem: LCURLY expr . COLON expr RCURLY

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    COLON          shift, and go to state 136
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 102

   57 elist: expr COMMA . expr

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 137
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 103

   60 objectdef: LSQUARE elist RSQUARE .

    $default  reduce using rule 60 (objectdef)


state 104

   59 objectdef: LSQUARE $@1 RSQUARE .

    $default  reduce using rule 59 (objectdef)


state 105

   61 objectdef: LSQUARE indexed RSQUARE .

    $default  reduce using rule 61 (objectdef)


state 106

   63 indexed: indexedelem COMMA . indexedelem

    LCURLY  shift, and go to state 51

    indexedelem  go to state 138


state 107

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   77 ifstmt: IF LPAREN expr . RPAREN stmt ELSE stmt
   78       | IF LPAREN expr . RPAREN stmt

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RPAREN         shift, and go to state 139
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 108

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   79 whilestmt: WHILE LPAREN expr . RPAREN stmt

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RPAREN         shift, and go to state 140
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 109

   80 forstmt: FOR LPAREN elist . SEMICOLON expr SEMICOLON elist SEMICOLON RPAREN stmt

    SEMICOLON  shift, and go to state 141


state 110

   74 idlist: ID .
   75       | ID . COMMA ID

    COMMA  shift, and go to state 142

    $default  reduce using rule 74 (idlist)


state 111

   67 funcdef: FUNCTION LPAREN idlist . RPAREN

    RPAREN  shift, and go to state 143


state 112

   66 funcdef: FUNCTION ID LPAREN . idlist RPAREN block

    ID  shift, and go to state 110

    $default  reduce using rule 76 (idlist)

    idlist  go to state 144


state 113

   81 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 81 (returnstmt)


state 114

   14 expr: expr . ADD expr
   14     | expr ADD expr .
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    $default  reduce using rule 14 (expr)


state 115

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   15     | expr MUL expr .
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    $default  reduce using rule 15 (expr)


state 116

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   16     | expr DIV expr .
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    $default  reduce using rule 16 (expr)


state 117

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   17     | expr MODULO expr .
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    $default  reduce using rule 17 (expr)


state 118

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   22     | expr EQUAL expr .
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


state 119

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   23     | expr NOT_EQUAL expr .
   24     | expr . AND expr
   25     | expr . OR expr

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


state 120

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   18     | expr GREATER expr .
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    ADD     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 18 (expr)


state 121

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   20     | expr LESSER expr .
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    ADD     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 20 (expr)


state 122

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   21     | expr LESSER_EQUAL expr .
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    ADD     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 21 (expr)


state 123

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   19     | expr GREATER_EQUAL expr .
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    ADD     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 19 (expr)


state 124

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   24     | expr AND expr .
   25     | expr . OR expr

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79

    $default  reduce using rule 24 (expr)


state 125

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   25     | expr OR expr .

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81

    $default  reduce using rule 25 (expr)


state 126

   54 normcall: LPAREN elist . RPAREN

    RPAREN  shift, and go to state 145


state 127

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   46 member: lvalue LSQUARE expr . RSQUARE

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RSQUARE        shift, and go to state 146
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 128

   45 member: lvalue PERIOD ID .

    $default  reduce using rule 45 (member)


state 129

   55 methodcall: DPERIOD ID . LPAREN elist RPAREN

    LPAREN  shift, and go to state 147


state 130

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   35 assignment: lvalue ASSIGN expr .

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81
    OR             shift, and go to state 82

    $default  reduce using rule 35 (assignment)


state 131

   49 call: call LPAREN elist . RPAREN

    RPAREN  shift, and go to state 148


state 132

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   48 member: call LSQUARE expr . RSQUARE

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RSQUARE        shift, and go to state 149
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 133

   47 member: call PERIOD ID .

    $default  reduce using rule 47 (member)


state 134

   51 call: LPAREN funcdef RPAREN . LPAREN elist RPAREN

    LPAREN  shift, and go to state 135


state 135

   51 call: LPAREN funcdef RPAREN LPAREN . elist RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 150
    objectdef   go to state 34
    const       go to state 37


state 136

   64 indexedelem: LCURLY expr COLON . expr RCURLY

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 151
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 137

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   57 elist: expr COMMA expr .

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81
    OR             shift, and go to state 82

    $default  reduce using rule 57 (elist)


state 138

   63 indexed: indexedelem COMMA indexedelem .

    $default  reduce using rule 63 (indexed)


state 139

   77 ifstmt: IF LPAREN expr RPAREN . stmt ELSE stmt
   78       | IF LPAREN expr RPAREN . stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    BREAK        shift, and go to state 14
    CONTINUE     shift, and go to state 15
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    stmt        go to state 152
    expr        go to state 27
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


state 140

   79 whilestmt: WHILE LPAREN expr RPAREN . stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    BREAK        shift, and go to state 14
    CONTINUE     shift, and go to state 15
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    stmt        go to state 153
    expr        go to state 27
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


state 141

   80 forstmt: FOR LPAREN elist SEMICOLON . expr SEMICOLON elist SEMICOLON RPAREN stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 154
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


state 142

   75 idlist: ID COMMA . ID

    ID  shift, and go to state 155


state 143

   67 funcdef: FUNCTION LPAREN idlist RPAREN .

    $default  reduce using rule 67 (funcdef)


state 144

   66 funcdef: FUNCTION ID LPAREN idlist . RPAREN block

    RPAREN  shift, and go to state 156


state 145

   54 normcall: LPAREN elist RPAREN .

    $default  reduce using rule 54 (normcall)


state 146

   46 member: lvalue LSQUARE expr RSQUARE .

    $default  reduce using rule 46 (member)


state 147

   55 methodcall: DPERIOD ID LPAREN . elist RPAREN

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 157
    objectdef   go to state 34
    const       go to state 37


state 148

   49 call: call LPAREN elist RPAREN .

    $default  reduce using rule 49 (call)


state 149

   48 member: call LSQUARE expr RSQUARE .

    $default  reduce using rule 48 (member)


state 150

   51 call: LPAREN funcdef RPAREN LPAREN elist . RPAREN

    RPAREN  shift, and go to state 158


state 151

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   64 indexedelem: LCURLY expr COLON expr . RCURLY

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RCURLY         shift, and go to state 159
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 152

   77 ifstmt: IF LPAREN expr RPAREN stmt . ELSE stmt
   78       | IF LPAREN expr RPAREN stmt .

    ELSE  shift, and go to state 160

    ELSE      [reduce using rule 78 (ifstmt)]
    $default  reduce using rule 78 (ifstmt)


state 153

   79 whilestmt: WHILE LPAREN expr RPAREN stmt .

    $default  reduce using rule 79 (whilestmt)


state 154

   14 expr: expr . ADD expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESSER expr
   21     | expr . LESSER_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   80 forstmt: FOR LPAREN elist SEMICOLON expr . SEMICOLON elist SEMICOLON RPAREN stmt

    ADD            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    SEMICOLON      shift, and go to state 161
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 155

   75 idlist: ID COMMA ID .

    $default  reduce using rule 75 (idlist)


state 156

   66 funcdef: FUNCTION ID LPAREN idlist RPAREN . block

    LCURLY  shift, and go to state 5

    block  go to state 162


state 157

   55 methodcall: DPERIOD ID LPAREN elist . RPAREN

    RPAREN  shift, and go to state 163


state 158

   51 call: LPAREN funcdef RPAREN LPAREN elist RPAREN .

    $default  reduce using rule 51 (call)


state 159

   64 indexedelem: LCURLY expr COLON expr RCURLY .

    $default  reduce using rule 64 (indexedelem)


state 160

   77 ifstmt: IF LPAREN expr RPAREN stmt ELSE . stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    BREAK        shift, and go to state 14
    CONTINUE     shift, and go to state 15
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    stmt        go to state 164
    expr        go to state 27
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


state 161

   80 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON . elist SEMICOLON RPAREN stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LSQUARE      shift, and go to state 6
    DCOLON       shift, and go to state 8
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 165
    objectdef   go to state 34
    const       go to state 37


state 162

   66 funcdef: FUNCTION ID LPAREN idlist RPAREN block .

    $default  reduce using rule 66 (funcdef)


state 163

   55 methodcall: DPERIOD ID LPAREN elist RPAREN .

    $default  reduce using rule 55 (methodcall)


state 164

   77 ifstmt: IF LPAREN expr RPAREN stmt ELSE stmt .

    $default  reduce using rule 77 (ifstmt)


state 165

   80 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist . SEMICOLON RPAREN stmt

    SEMICOLON  shift, and go to state 166


state 166

   80 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist SEMICOLON . RPAREN stmt

    RPAREN  shift, and go to state 167


state 167

   80 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist SEMICOLON RPAREN . stmt

    SUB          shift, and go to state 1
    PLUS_PLUS    shift, and go to state 2
    MINUS_MINUS  shift, and go to state 3
    LPAREN       shift, and go to state 4
    LCURLY       shift, and go to state 5
    LSQUARE      shift, and go to state 6
    SEMICOLON    shift, and go to state 7
    DCOLON       shift, and go to state 8
    IF           shift, and go to state 9
    WHILE        shift, and go to state 10
    FOR          shift, and go to state 11
    FUNCTION     shift, and go to state 12
    RETURN       shift, and go to state 13
    BREAK        shift, and go to state 14
    CONTINUE     shift, and go to state 15
    NOT          shift, and go to state 16
    LOCAL        shift, and go to state 17
    ID           shift, and go to state 18
    INTEGER      shift, and go to state 19
    REAL         shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24

    stmt        go to state 168
    expr        go to state 27
    term        go to state 28
    assignment  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


state 168

   80 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist SEMICOLON RPAREN stmt .

    $default  reduce using rule 80 (forstmt)
