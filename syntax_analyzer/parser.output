State 150 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statements stmt
    3           | /* empty */

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignment
   15     | expr ADD expr
   16     | expr SUB expr
   17     | expr MUL expr
   18     | expr DIV expr
   19     | expr MODULO expr
   20     | expr GREATER expr
   21     | expr GREATER_EQUAL expr
   22     | expr LESSER expr
   23     | expr LESSER_EQUAL expr
   24     | expr EQUAL expr
   25     | expr NOT_EQUAL expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: LPAREN expr RPAREN
   30     | SUB expr
   31     | NOT expr
   32     | PLUS_PLUS lvalue
   33     | lvalue PLUS_PLUS
   34     | MINUS_MINUS lvalue
   35     | lvalue MINUS_MINUS
   36     | primary

   37 assignment: lvalue ASSIGN expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LPAREN funcdef RPAREN
   42        | const

   43 lvalue: ID
   44       | LOCAL ID
   45       | DCOLON ID
   46       | member

   47 member: lvalue PERIOD ID
   48       | lvalue LSQUARE expr RSQUARE
   49       | call PERIOD ID
   50       | call LSQUARE expr RSQUARE

   51 call: call LPAREN elist RPAREN
   52     | lvalue callsuffix
   53     | LPAREN funcdef RPAREN LPAREN elist RPAREN

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: LPAREN elist RPAREN

   57 methodcall: DPERIOD ID LPAREN elist RPAREN

   58 elist: expr
   59      | elist COMMA expr
   60      | /* empty */

   61 objectdef: LSQUARE elist RSQUARE
   62          | LSQUARE indexed RSQUARE

   63 indexed: indexedelem
   64        | indexed COMMA indexedelem

   65 indexedelem: LCURLY expr COLON expr RCURLY

   66 $@1: /* empty */

   67 block: LCURLY $@1 statements RCURLY

   68 $@2: /* empty */

   69 $@3: /* empty */

   70 $@4: /* empty */

   71 funcdef: FUNCTION ID $@2 LPAREN $@3 idlist RPAREN $@4 block

   72 $@5: /* empty */

   73 $@6: /* empty */

   74 $@7: /* empty */

   75 funcdef: FUNCTION $@5 LPAREN $@6 idlist RPAREN $@7 block

   76 const: INTEGER
   77      | REAL
   78      | STRING
   79      | NIL
   80      | TRUE
   81      | FALSE

   82 idlist: ID
   83       | idlist COMMA ID
   84       | /* empty */

   85 ifstmt: IF LPAREN expr RPAREN stmt ELSE stmt
   86       | IF LPAREN expr RPAREN stmt

   87 whilestmt: WHILE LPAREN expr RPAREN stmt

   88 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN stmt

   89 returnstmt: RETURN expr SEMICOLON
   90           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 15
SUB (259) 16 30
MUL (260) 17
DIV (261) 18
PLUS_PLUS (262) 32 33
MINUS_MINUS (263) 34 35
MODULO (264) 19
EQUAL (265) 24
NOT_EQUAL (266) 25
GREATER (267) 20
LESSER (268) 22
LESSER_EQUAL (269) 23
GREATER_EQUAL (270) 21
LPAREN (271) 29 41 51 53 56 57 71 75 85 86 87 88
RPAREN (272) 29 41 51 53 56 57 71 75 85 86 87 88
LCURLY (273) 65 67
RCURLY (274) 65 67
LSQUARE (275) 48 50 61 62
RSQUARE (276) 48 50 61 62
COLON (277) 65
SEMICOLON (278) 4 9 10 13 88 89 90
DCOLON (279) 45
COMMA (280) 59 64 83
PERIOD (281) 47 49
DPERIOD (282) 57
IF (283) 85 86
ELSE (284) 85
WHILE (285) 87
FOR (286) 88
FUNCTION (287) 71 75
RETURN (288) 89 90
BREAK (289) 9
CONTINUE (290) 10
AND (291) 26
NOT (292) 31
OR (293) 27
LOCAL (294) 44
ASSIGN (295) 37
NIL (296) 79
TRUE (297) 80
FALSE (298) 81
STRING (299) 78
ID (300) 43 44 45 47 49 57 71 82 83
INTEGER (301) 76
REAL (302) 77
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
statements (51)
    on left: 2 3, on right: 1 2 67
stmt (52)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 85 86 87 88
expr (53)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 58 59
    65 85 86 87 88 89
term (54)
    on left: 29 30 31 32 33 34 35 36, on right: 28
assignment (55)
    on left: 37, on right: 14
primary (56)
    on left: 38 39 40 41 42, on right: 36
lvalue (57)
    on left: 43 44 45 46, on right: 32 33 34 35 37 38 47 48 52
member (58)
    on left: 47 48 49 50, on right: 46
call (59)
    on left: 51 52 53, on right: 39 49 50 51
callsuffix (60)
    on left: 54 55, on right: 52
normcall (61)
    on left: 56, on right: 54
methodcall (62)
    on left: 57, on right: 55
elist (63)
    on left: 58 59 60, on right: 51 53 56 57 59 61 88
objectdef (64)
    on left: 61 62, on right: 40
indexed (65)
    on left: 63 64, on right: 62 64
indexedelem (66)
    on left: 65, on right: 63 64
block (67)
    on left: 67, on right: 11 71 75
$@1 (68)
    on left: 66, on right: 67
funcdef (69)
    on left: 71 75, on right: 12 41 53
$@2 (70)
    on left: 68, on right: 71
$@3 (71)
    on left: 69, on right: 71
$@4 (72)
    on left: 70, on right: 71
$@5 (73)
    on left: 72, on right: 75
$@6 (74)
    on left: 73, on right: 75
$@7 (75)
    on left: 74, on right: 75
const (76)
    on left: 76 77 78 79 80 81, on right: 42
idlist (77)
    on left: 82 83 84, on right: 71 75 83
ifstmt (78)
    on left: 85 86, on right: 5
whilestmt (79)
    on left: 87, on right: 6
forstmt (80)
    on left: 88, on right: 7
returnstmt (81)
    on left: 89 90, on right: 8


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: statements .
    2 statements: statements . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 1 (program)

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 3

    0 $accept: program $end .

    $default  accept


state 4

   30 term: SUB . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 44
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 5

   32 term: PLUS_PLUS . lvalue

    LPAREN  shift, and go to state 45
    DCOLON  shift, and go to state 11
    LOCAL   shift, and go to state 20
    ID      shift, and go to state 25

    lvalue  go to state 46
    member  go to state 34
    call    go to state 47


state 6

   34 term: MINUS_MINUS . lvalue

    LPAREN  shift, and go to state 45
    DCOLON  shift, and go to state 11
    LOCAL   shift, and go to state 20
    ID      shift, and go to state 25

    lvalue  go to state 48
    member  go to state 34
    call    go to state 47


state 7

   29 term: LPAREN . expr RPAREN
   41 primary: LPAREN . funcdef RPAREN
   53 call: LPAREN . funcdef RPAREN LPAREN elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    FUNCTION     shift, and go to state 15
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 49
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcdef     go to state 50
    const       go to state 39


state 8

   67 block: LCURLY . $@1 statements RCURLY

    $default  reduce using rule 66 ($@1)

    $@1  go to state 51


state 9

   61 objectdef: LSQUARE . elist RSQUARE
   62          | LSQUARE . indexed RSQUARE

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 52
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 60 (elist)

    expr         go to state 53
    term         go to state 30
    assignment   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 54
    objectdef    go to state 36
    indexed      go to state 55
    indexedelem  go to state 56
    const        go to state 39


state 10

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


state 11

   45 lvalue: DCOLON . ID

    ID  shift, and go to state 57


state 12

   85 ifstmt: IF . LPAREN expr RPAREN stmt ELSE stmt
   86       | IF . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 58


state 13

   87 whilestmt: WHILE . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 59


state 14

   88 forstmt: FOR . LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN stmt

    LPAREN  shift, and go to state 60


state 15

   71 funcdef: FUNCTION . ID $@2 LPAREN $@3 idlist RPAREN $@4 block
   75        | FUNCTION . $@5 LPAREN $@6 idlist RPAREN $@7 block

    ID  shift, and go to state 61

    $default  reduce using rule 72 ($@5)

    $@5  go to state 62


state 16

   89 returnstmt: RETURN . expr SEMICOLON
   90           | RETURN . SEMICOLON

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 63
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 64
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 17

    9 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 65


state 18

   10 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 66


state 19

   31 term: NOT . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 67
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 20

   44 lvalue: LOCAL . ID

    ID  shift, and go to state 68


state 21

   79 const: NIL .

    $default  reduce using rule 79 (const)


state 22

   80 const: TRUE .

    $default  reduce using rule 80 (const)


state 23

   81 const: FALSE .

    $default  reduce using rule 81 (const)


state 24

   78 const: STRING .

    $default  reduce using rule 78 (const)


state 25

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


state 26

   76 const: INTEGER .

    $default  reduce using rule 76 (const)


state 27

   77 const: REAL .

    $default  reduce using rule 77 (const)


state 28

    2 statements: statements stmt .

    $default  reduce using rule 2 (statements)


state 29

    4 stmt: expr . SEMICOLON
   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    SEMICOLON      shift, and go to state 80
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 30

   28 expr: term .

    $default  reduce using rule 28 (expr)


state 31

   14 expr: assignment .

    $default  reduce using rule 14 (expr)


state 32

   36 term: primary .

    $default  reduce using rule 36 (term)


state 33

   33 term: lvalue . PLUS_PLUS
   35     | lvalue . MINUS_MINUS
   37 assignment: lvalue . ASSIGN expr
   38 primary: lvalue .
   47 member: lvalue . PERIOD ID
   48       | lvalue . LSQUARE expr RSQUARE
   52 call: lvalue . callsuffix

    PLUS_PLUS    shift, and go to state 83
    MINUS_MINUS  shift, and go to state 84
    LPAREN       shift, and go to state 85
    LSQUARE      shift, and go to state 86
    PERIOD       shift, and go to state 87
    DPERIOD      shift, and go to state 88
    ASSIGN       shift, and go to state 89

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


state 34

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


state 35

   39 primary: call .
   49 member: call . PERIOD ID
   50       | call . LSQUARE expr RSQUARE
   51 call: call . LPAREN elist RPAREN

    LPAREN   shift, and go to state 93
    LSQUARE  shift, and go to state 94
    PERIOD   shift, and go to state 95

    $default  reduce using rule 39 (primary)


state 36

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


state 37

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


state 38

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


state 39

   42 primary: const .

    $default  reduce using rule 42 (primary)


state 40

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


state 41

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


state 42

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


state 43

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


state 44

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: SUB expr .

    $default  reduce using rule 30 (term)


state 45

   53 call: LPAREN . funcdef RPAREN LPAREN elist RPAREN

    FUNCTION  shift, and go to state 15

    funcdef  go to state 96


state 46

   32 term: PLUS_PLUS lvalue .
   47 member: lvalue . PERIOD ID
   48       | lvalue . LSQUARE expr RSQUARE
   52 call: lvalue . callsuffix

    LPAREN   shift, and go to state 85
    LSQUARE  shift, and go to state 86
    PERIOD   shift, and go to state 87
    DPERIOD  shift, and go to state 88

    $default  reduce using rule 32 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


state 47

   49 member: call . PERIOD ID
   50       | call . LSQUARE expr RSQUARE
   51 call: call . LPAREN elist RPAREN

    LPAREN   shift, and go to state 93
    LSQUARE  shift, and go to state 94
    PERIOD   shift, and go to state 95


state 48

   34 term: MINUS_MINUS lvalue .
   47 member: lvalue . PERIOD ID
   48       | lvalue . LSQUARE expr RSQUARE
   52 call: lvalue . callsuffix

    LPAREN   shift, and go to state 85
    LSQUARE  shift, and go to state 86
    PERIOD   shift, and go to state 87
    DPERIOD  shift, and go to state 88

    $default  reduce using rule 34 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


state 49

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: LPAREN expr . RPAREN

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RPAREN         shift, and go to state 97
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 50

   41 primary: LPAREN funcdef . RPAREN
   53 call: LPAREN funcdef . RPAREN LPAREN elist RPAREN

    RPAREN  shift, and go to state 98


state 51

   67 block: LCURLY $@1 . statements RCURLY

    $default  reduce using rule 3 (statements)

    statements  go to state 99


state 52

   65 indexedelem: LCURLY . expr COLON expr RCURLY

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 100
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 53

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   58 elist: expr .

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81
    OR             shift, and go to state 82

    $default  reduce using rule 58 (elist)


state 54

   59 elist: elist . COMMA expr
   61 objectdef: LSQUARE elist . RSQUARE

    RSQUARE  shift, and go to state 101
    COMMA    shift, and go to state 102


state 55

   62 objectdef: LSQUARE indexed . RSQUARE
   64 indexed: indexed . COMMA indexedelem

    RSQUARE  shift, and go to state 103
    COMMA    shift, and go to state 104


state 56

   63 indexed: indexedelem .

    $default  reduce using rule 63 (indexed)


state 57

   45 lvalue: DCOLON ID .

    $default  reduce using rule 45 (lvalue)


state 58

   85 ifstmt: IF LPAREN . expr RPAREN stmt ELSE stmt
   86       | IF LPAREN . expr RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 105
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 59

   87 whilestmt: WHILE LPAREN . expr RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 106
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 60

   88 forstmt: FOR LPAREN . elist SEMICOLON expr SEMICOLON elist RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 60 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 107
    objectdef   go to state 36
    const       go to state 39


state 61

   71 funcdef: FUNCTION ID . $@2 LPAREN $@3 idlist RPAREN $@4 block

    $default  reduce using rule 68 ($@2)

    $@2  go to state 108


state 62

   75 funcdef: FUNCTION $@5 . LPAREN $@6 idlist RPAREN $@7 block

    LPAREN  shift, and go to state 109


state 63

   90 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 90 (returnstmt)


state 64

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   89 returnstmt: RETURN expr . SEMICOLON

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    SEMICOLON      shift, and go to state 110
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 65

    9 stmt: BREAK SEMICOLON .

    $default  reduce using rule 9 (stmt)


state 66

   10 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (stmt)


state 67

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


state 68

   44 lvalue: LOCAL ID .

    $default  reduce using rule 44 (lvalue)


state 69

   15 expr: expr ADD . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 111
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 70

   16 expr: expr SUB . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 112
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 71

   17 expr: expr MUL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 113
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 72

   18 expr: expr DIV . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 114
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 73

   19 expr: expr MODULO . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 115
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 74

   24 expr: expr EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 116
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 75

   25 expr: expr NOT_EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 117
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 76

   20 expr: expr GREATER . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 118
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 77

   22 expr: expr LESSER . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 119
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 78

   23 expr: expr LESSER_EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 120
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 79

   21 expr: expr GREATER_EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 121
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 80

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


state 81

   26 expr: expr AND . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 122
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 82

   27 expr: expr OR . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 123
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 83

   33 term: lvalue PLUS_PLUS .

    $default  reduce using rule 33 (term)


state 84

   35 term: lvalue MINUS_MINUS .

    $default  reduce using rule 35 (term)


state 85

   56 normcall: LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 60 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 124
    objectdef   go to state 36
    const       go to state 39


state 86

   48 member: lvalue LSQUARE . expr RSQUARE

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 125
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 87

   47 member: lvalue PERIOD . ID

    ID  shift, and go to state 126


state 88

   57 methodcall: DPERIOD . ID LPAREN elist RPAREN

    ID  shift, and go to state 127


state 89

   37 assignment: lvalue ASSIGN . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 128
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 90

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


state 91

   54 callsuffix: normcall .

    $default  reduce using rule 54 (callsuffix)


state 92

   55 callsuffix: methodcall .

    $default  reduce using rule 55 (callsuffix)


state 93

   51 call: call LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 60 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 129
    objectdef   go to state 36
    const       go to state 39


state 94

   50 member: call LSQUARE . expr RSQUARE

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 130
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 95

   49 member: call PERIOD . ID

    ID  shift, and go to state 131


state 96

   53 call: LPAREN funcdef . RPAREN LPAREN elist RPAREN

    RPAREN  shift, and go to state 132


state 97

   29 term: LPAREN expr RPAREN .

    $default  reduce using rule 29 (term)


state 98

   41 primary: LPAREN funcdef RPAREN .
   53 call: LPAREN funcdef RPAREN . LPAREN elist RPAREN

    LPAREN  shift, and go to state 133

    $default  reduce using rule 41 (primary)


state 99

    2 statements: statements . stmt
   67 block: LCURLY $@1 statements . RCURLY

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    RCURLY       shift, and go to state 134
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 100

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   65 indexedelem: LCURLY expr . COLON expr RCURLY

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    COLON          shift, and go to state 135
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 101

   61 objectdef: LSQUARE elist RSQUARE .

    $default  reduce using rule 61 (objectdef)


state 102

   59 elist: elist COMMA . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 136
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 103

   62 objectdef: LSQUARE indexed RSQUARE .

    $default  reduce using rule 62 (objectdef)


state 104

   64 indexed: indexed COMMA . indexedelem

    LCURLY  shift, and go to state 52

    indexedelem  go to state 137


state 105

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   85 ifstmt: IF LPAREN expr . RPAREN stmt ELSE stmt
   86       | IF LPAREN expr . RPAREN stmt

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RPAREN         shift, and go to state 138
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 106

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   87 whilestmt: WHILE LPAREN expr . RPAREN stmt

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RPAREN         shift, and go to state 139
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 107

   59 elist: elist . COMMA expr
   88 forstmt: FOR LPAREN elist . SEMICOLON expr SEMICOLON elist RPAREN stmt

    SEMICOLON  shift, and go to state 140
    COMMA      shift, and go to state 102


state 108

   71 funcdef: FUNCTION ID $@2 . LPAREN $@3 idlist RPAREN $@4 block

    LPAREN  shift, and go to state 141


state 109

   75 funcdef: FUNCTION $@5 LPAREN . $@6 idlist RPAREN $@7 block

    $default  reduce using rule 73 ($@6)

    $@6  go to state 142


state 110

   89 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 89 (returnstmt)


state 111

   15 expr: expr . ADD expr
   15     | expr ADD expr .
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    $default  reduce using rule 15 (expr)


state 112

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   16     | expr SUB expr .
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    $default  reduce using rule 16 (expr)


state 113

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   17     | expr MUL expr .
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


state 114

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   18     | expr DIV expr .
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


state 115

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   19     | expr MODULO expr .
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


state 116

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   24     | expr EQUAL expr .
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


state 117

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   25     | expr NOT_EQUAL expr .
   26     | expr . AND expr
   27     | expr . OR expr

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


state 118

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   20     | expr GREATER expr .
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 20 (expr)


state 119

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   22     | expr LESSER expr .
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


state 120

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   23     | expr LESSER_EQUAL expr .
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


state 121

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   21     | expr GREATER_EQUAL expr .
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 21 (expr)


state 122

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79

    $default  reduce using rule 26 (expr)


state 123

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81

    $default  reduce using rule 27 (expr)


state 124

   56 normcall: LPAREN elist . RPAREN
   59 elist: elist . COMMA expr

    RPAREN  shift, and go to state 143
    COMMA   shift, and go to state 102


state 125

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   48 member: lvalue LSQUARE expr . RSQUARE

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RSQUARE        shift, and go to state 144
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 126

   47 member: lvalue PERIOD ID .

    $default  reduce using rule 47 (member)


state 127

   57 methodcall: DPERIOD ID . LPAREN elist RPAREN

    LPAREN  shift, and go to state 145


state 128

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   37 assignment: lvalue ASSIGN expr .

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81
    OR             shift, and go to state 82

    $default  reduce using rule 37 (assignment)


state 129

   51 call: call LPAREN elist . RPAREN
   59 elist: elist . COMMA expr

    RPAREN  shift, and go to state 146
    COMMA   shift, and go to state 102


state 130

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   50 member: call LSQUARE expr . RSQUARE

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RSQUARE        shift, and go to state 147
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 131

   49 member: call PERIOD ID .

    $default  reduce using rule 49 (member)


state 132

   53 call: LPAREN funcdef RPAREN . LPAREN elist RPAREN

    LPAREN  shift, and go to state 133


state 133

   53 call: LPAREN funcdef RPAREN LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 60 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 148
    objectdef   go to state 36
    const       go to state 39


state 134

   67 block: LCURLY $@1 statements RCURLY .

    $default  reduce using rule 67 (block)


state 135

   65 indexedelem: LCURLY expr COLON . expr RCURLY

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 149
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 136

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   59 elist: elist COMMA expr .

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81
    OR             shift, and go to state 82

    $default  reduce using rule 59 (elist)


state 137

   64 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 64 (indexed)


state 138

   85 ifstmt: IF LPAREN expr RPAREN . stmt ELSE stmt
   86       | IF LPAREN expr RPAREN . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    stmt        go to state 150
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 139

   87 whilestmt: WHILE LPAREN expr RPAREN . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    stmt        go to state 151
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 140

   88 forstmt: FOR LPAREN elist SEMICOLON . expr SEMICOLON elist RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 152
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 141

   71 funcdef: FUNCTION ID $@2 LPAREN . $@3 idlist RPAREN $@4 block

    $default  reduce using rule 69 ($@3)

    $@3  go to state 153


state 142

   75 funcdef: FUNCTION $@5 LPAREN $@6 . idlist RPAREN $@7 block

    ID  shift, and go to state 154

    $default  reduce using rule 84 (idlist)

    idlist  go to state 155


state 143

   56 normcall: LPAREN elist RPAREN .

    $default  reduce using rule 56 (normcall)


state 144

   48 member: lvalue LSQUARE expr RSQUARE .

    $default  reduce using rule 48 (member)


state 145

   57 methodcall: DPERIOD ID LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 60 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 156
    objectdef   go to state 36
    const       go to state 39


state 146

   51 call: call LPAREN elist RPAREN .

    $default  reduce using rule 51 (call)


state 147

   50 member: call LSQUARE expr RSQUARE .

    $default  reduce using rule 50 (member)


state 148

   53 call: LPAREN funcdef RPAREN LPAREN elist . RPAREN
   59 elist: elist . COMMA expr

    RPAREN  shift, and go to state 157
    COMMA   shift, and go to state 102


state 149

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   65 indexedelem: LCURLY expr COLON expr . RCURLY

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RCURLY         shift, and go to state 158
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 150

   85 ifstmt: IF LPAREN expr RPAREN stmt . ELSE stmt
   86       | IF LPAREN expr RPAREN stmt .

    ELSE  shift, and go to state 159

    ELSE      [reduce using rule 86 (ifstmt)]
    $default  reduce using rule 86 (ifstmt)


state 151

   87 whilestmt: WHILE LPAREN expr RPAREN stmt .

    $default  reduce using rule 87 (whilestmt)


state 152

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   88 forstmt: FOR LPAREN elist SEMICOLON expr . SEMICOLON elist RPAREN stmt

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    SEMICOLON      shift, and go to state 160
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 153

   71 funcdef: FUNCTION ID $@2 LPAREN $@3 . idlist RPAREN $@4 block

    ID  shift, and go to state 154

    $default  reduce using rule 84 (idlist)

    idlist  go to state 161


state 154

   82 idlist: ID .

    $default  reduce using rule 82 (idlist)


state 155

   75 funcdef: FUNCTION $@5 LPAREN $@6 idlist . RPAREN $@7 block
   83 idlist: idlist . COMMA ID

    RPAREN  shift, and go to state 162
    COMMA   shift, and go to state 163


state 156

   57 methodcall: DPERIOD ID LPAREN elist . RPAREN
   59 elist: elist . COMMA expr

    RPAREN  shift, and go to state 164
    COMMA   shift, and go to state 102


state 157

   53 call: LPAREN funcdef RPAREN LPAREN elist RPAREN .

    $default  reduce using rule 53 (call)


state 158

   65 indexedelem: LCURLY expr COLON expr RCURLY .

    $default  reduce using rule 65 (indexedelem)


state 159

   85 ifstmt: IF LPAREN expr RPAREN stmt ELSE . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    stmt        go to state 165
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 160

   88 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON . elist RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 60 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 166
    objectdef   go to state 36
    const       go to state 39


state 161

   71 funcdef: FUNCTION ID $@2 LPAREN $@3 idlist . RPAREN $@4 block
   83 idlist: idlist . COMMA ID

    RPAREN  shift, and go to state 167
    COMMA   shift, and go to state 163


state 162

   75 funcdef: FUNCTION $@5 LPAREN $@6 idlist RPAREN . $@7 block

    $default  reduce using rule 74 ($@7)

    $@7  go to state 168


state 163

   83 idlist: idlist COMMA . ID

    ID  shift, and go to state 169


state 164

   57 methodcall: DPERIOD ID LPAREN elist RPAREN .

    $default  reduce using rule 57 (methodcall)


state 165

   85 ifstmt: IF LPAREN expr RPAREN stmt ELSE stmt .

    $default  reduce using rule 85 (ifstmt)


state 166

   59 elist: elist . COMMA expr
   88 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist . RPAREN stmt

    RPAREN  shift, and go to state 170
    COMMA   shift, and go to state 102


state 167

   71 funcdef: FUNCTION ID $@2 LPAREN $@3 idlist RPAREN . $@4 block

    $default  reduce using rule 70 ($@4)

    $@4  go to state 171


state 168

   75 funcdef: FUNCTION $@5 LPAREN $@6 idlist RPAREN $@7 . block

    LCURLY  shift, and go to state 8

    block  go to state 172


state 169

   83 idlist: idlist COMMA ID .

    $default  reduce using rule 83 (idlist)


state 170

   88 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    stmt        go to state 173
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 171

   71 funcdef: FUNCTION ID $@2 LPAREN $@3 idlist RPAREN $@4 . block

    LCURLY  shift, and go to state 8

    block  go to state 174


state 172

   75 funcdef: FUNCTION $@5 LPAREN $@6 idlist RPAREN $@7 block .

    $default  reduce using rule 75 (funcdef)


state 173

   88 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN stmt .

    $default  reduce using rule 88 (forstmt)


state 174

   71 funcdef: FUNCTION ID $@2 LPAREN $@3 idlist RPAREN $@4 block .

    $default  reduce using rule 71 (funcdef)
