State 152 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statements stmt
    3           | /* empty */

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignment
   15     | expr ADD expr
   16     | expr SUB expr
   17     | expr MUL expr
   18     | expr DIV expr
   19     | expr MODULO expr
   20     | expr GREATER expr
   21     | expr GREATER_EQUAL expr
   22     | expr LESSER expr
   23     | expr LESSER_EQUAL expr
   24     | expr EQUAL expr
   25     | expr NOT_EQUAL expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: LPAREN expr RPAREN
   30     | SUB expr
   31     | NOT expr
   32     | PLUS_PLUS lvalue

   33 $@1: /* empty */

   34 term: lvalue $@1 PLUS_PLUS
   35     | MINUS_MINUS lvalue

   36 $@2: /* empty */

   37 term: lvalue $@2 MINUS_MINUS
   38     | primary

   39 $@3: /* empty */

   40 assignment: lvalue $@3 ASSIGN expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | LPAREN funcdef RPAREN
   45        | const

   46 lvalue: ID
   47       | LOCAL ID
   48       | DCOLON ID
   49       | member

   50 member: lvalue PERIOD ID
   51       | lvalue LSQUARE expr RSQUARE
   52       | call PERIOD ID
   53       | call LSQUARE expr RSQUARE

   54 call: call LPAREN elist RPAREN

   55 $@4: /* empty */

   56 call: lvalue $@4 callsuffix
   57     | LPAREN funcdef RPAREN LPAREN elist RPAREN

   58 callsuffix: normcall
   59           | methodcall

   60 normcall: LPAREN elist RPAREN

   61 methodcall: DPERIOD ID LPAREN elist RPAREN

   62 elist: expr
   63      | elist COMMA expr
   64      | /* empty */

   65 objectdef: LSQUARE elist RSQUARE
   66          | LSQUARE indexed RSQUARE

   67 indexed: indexedelem
   68        | indexed COMMA indexedelem

   69 indexedelem: LCURLY expr COLON expr RCURLY

   70 $@5: /* empty */

   71 block: LCURLY $@5 statements RCURLY

   72 $@6: /* empty */

   73 $@7: /* empty */

   74 $@8: /* empty */

   75 funcdef: FUNCTION ID $@6 LPAREN $@7 idlist RPAREN $@8 block

   76 $@9: /* empty */

   77 $@10: /* empty */

   78 $@11: /* empty */

   79 funcdef: FUNCTION $@9 LPAREN $@10 idlist RPAREN $@11 block

   80 const: INTEGER
   81      | REAL
   82      | STRING
   83      | NIL
   84      | TRUE
   85      | FALSE

   86 idlist: ID
   87       | idlist COMMA ID
   88       | /* empty */

   89 ifstmt: IF LPAREN expr RPAREN stmt ELSE stmt
   90       | IF LPAREN expr RPAREN stmt

   91 whilestmt: WHILE LPAREN expr RPAREN stmt

   92 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN stmt

   93 returnstmt: RETURN expr SEMICOLON
   94           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 15
SUB (259) 16 30
MUL (260) 17
DIV (261) 18
PLUS_PLUS (262) 32 34
MINUS_MINUS (263) 35 37
MODULO (264) 19
EQUAL (265) 24
NOT_EQUAL (266) 25
GREATER (267) 20
LESSER (268) 22
LESSER_EQUAL (269) 23
GREATER_EQUAL (270) 21
LPAREN (271) 29 44 54 57 60 61 75 79 89 90 91 92
RPAREN (272) 29 44 54 57 60 61 75 79 89 90 91 92
LCURLY (273) 69 71
RCURLY (274) 69 71
LSQUARE (275) 51 53 65 66
RSQUARE (276) 51 53 65 66
COLON (277) 69
SEMICOLON (278) 4 9 10 13 92 93 94
DCOLON (279) 48
COMMA (280) 63 68 87
PERIOD (281) 50 52
DPERIOD (282) 61
IF (283) 89 90
ELSE (284) 89
WHILE (285) 91
FOR (286) 92
FUNCTION (287) 75 79
RETURN (288) 93 94
BREAK (289) 9
CONTINUE (290) 10
AND (291) 26
NOT (292) 31
OR (293) 27
LOCAL (294) 47
ASSIGN (295) 40
NIL (296) 83
TRUE (297) 84
FALSE (298) 85
STRING (299) 82
ID (300) 46 47 48 50 52 61 75 86 87
INTEGER (301) 80
REAL (302) 81
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
statements (51)
    on left: 2 3, on right: 1 2 71
stmt (52)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 89 90 91 92
expr (53)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 40 51 53 62 63
    69 89 90 91 92 93
term (54)
    on left: 29 30 31 32 34 35 37 38, on right: 28
$@1 (55)
    on left: 33, on right: 34
$@2 (56)
    on left: 36, on right: 37
assignment (57)
    on left: 40, on right: 14
$@3 (58)
    on left: 39, on right: 40
primary (59)
    on left: 41 42 43 44 45, on right: 38
lvalue (60)
    on left: 46 47 48 49, on right: 32 34 35 37 40 41 50 51 56
member (61)
    on left: 50 51 52 53, on right: 49
call (62)
    on left: 54 56 57, on right: 42 52 53 54
$@4 (63)
    on left: 55, on right: 56
callsuffix (64)
    on left: 58 59, on right: 56
normcall (65)
    on left: 60, on right: 58
methodcall (66)
    on left: 61, on right: 59
elist (67)
    on left: 62 63 64, on right: 54 57 60 61 63 65 92
objectdef (68)
    on left: 65 66, on right: 43
indexed (69)
    on left: 67 68, on right: 66 68
indexedelem (70)
    on left: 69, on right: 67 68
block (71)
    on left: 71, on right: 11 75 79
$@5 (72)
    on left: 70, on right: 71
funcdef (73)
    on left: 75 79, on right: 12 44 57
$@6 (74)
    on left: 72, on right: 75
$@7 (75)
    on left: 73, on right: 75
$@8 (76)
    on left: 74, on right: 75
$@9 (77)
    on left: 76, on right: 79
$@10 (78)
    on left: 77, on right: 79
$@11 (79)
    on left: 78, on right: 79
const (80)
    on left: 80 81 82 83 84 85, on right: 45
idlist (81)
    on left: 86 87 88, on right: 75 79 87
ifstmt (82)
    on left: 89 90, on right: 5
whilestmt (83)
    on left: 91, on right: 6
forstmt (84)
    on left: 92, on right: 7
returnstmt (85)
    on left: 93 94, on right: 8


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: statements .
    2 statements: statements . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 1 (program)

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 3

    0 $accept: program $end .

    $default  accept


state 4

   30 term: SUB . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 44
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 5

   32 term: PLUS_PLUS . lvalue

    LPAREN  shift, and go to state 45
    DCOLON  shift, and go to state 11
    LOCAL   shift, and go to state 20
    ID      shift, and go to state 25

    lvalue  go to state 46
    member  go to state 34
    call    go to state 47


state 6

   35 term: MINUS_MINUS . lvalue

    LPAREN  shift, and go to state 45
    DCOLON  shift, and go to state 11
    LOCAL   shift, and go to state 20
    ID      shift, and go to state 25

    lvalue  go to state 48
    member  go to state 34
    call    go to state 47


state 7

   29 term: LPAREN . expr RPAREN
   44 primary: LPAREN . funcdef RPAREN
   57 call: LPAREN . funcdef RPAREN LPAREN elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    FUNCTION     shift, and go to state 15
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 49
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcdef     go to state 50
    const       go to state 39


state 8

   71 block: LCURLY . $@5 statements RCURLY

    $default  reduce using rule 70 ($@5)

    $@5  go to state 51


state 9

   65 objectdef: LSQUARE . elist RSQUARE
   66          | LSQUARE . indexed RSQUARE

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 52
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr         go to state 53
    term         go to state 30
    assignment   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 54
    objectdef    go to state 36
    indexed      go to state 55
    indexedelem  go to state 56
    const        go to state 39


state 10

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


state 11

   48 lvalue: DCOLON . ID

    ID  shift, and go to state 57


state 12

   89 ifstmt: IF . LPAREN expr RPAREN stmt ELSE stmt
   90       | IF . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 58


state 13

   91 whilestmt: WHILE . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 59


state 14

   92 forstmt: FOR . LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN stmt

    LPAREN  shift, and go to state 60


state 15

   75 funcdef: FUNCTION . ID $@6 LPAREN $@7 idlist RPAREN $@8 block
   79        | FUNCTION . $@9 LPAREN $@10 idlist RPAREN $@11 block

    ID  shift, and go to state 61

    $default  reduce using rule 76 ($@9)

    $@9  go to state 62


state 16

   93 returnstmt: RETURN . expr SEMICOLON
   94           | RETURN . SEMICOLON

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 63
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 64
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 17

    9 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 65


state 18

   10 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 66


state 19

   31 term: NOT . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 67
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 20

   47 lvalue: LOCAL . ID

    ID  shift, and go to state 68


state 21

   83 const: NIL .

    $default  reduce using rule 83 (const)


state 22

   84 const: TRUE .

    $default  reduce using rule 84 (const)


state 23

   85 const: FALSE .

    $default  reduce using rule 85 (const)


state 24

   82 const: STRING .

    $default  reduce using rule 82 (const)


state 25

   46 lvalue: ID .

    $default  reduce using rule 46 (lvalue)


state 26

   80 const: INTEGER .

    $default  reduce using rule 80 (const)


state 27

   81 const: REAL .

    $default  reduce using rule 81 (const)


state 28

    2 statements: statements stmt .

    $default  reduce using rule 2 (statements)


state 29

    4 stmt: expr . SEMICOLON
   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    SEMICOLON      shift, and go to state 80
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 30

   28 expr: term .

    $default  reduce using rule 28 (expr)


state 31

   14 expr: assignment .

    $default  reduce using rule 14 (expr)


state 32

   38 term: primary .

    $default  reduce using rule 38 (term)


state 33

   34 term: lvalue . $@1 PLUS_PLUS
   37     | lvalue . $@2 MINUS_MINUS
   40 assignment: lvalue . $@3 ASSIGN expr
   41 primary: lvalue .
   50 member: lvalue . PERIOD ID
   51       | lvalue . LSQUARE expr RSQUARE
   56 call: lvalue . $@4 callsuffix

    LSQUARE  shift, and go to state 83
    PERIOD   shift, and go to state 84

    PLUS_PLUS    reduce using rule 33 ($@1)
    MINUS_MINUS  reduce using rule 36 ($@2)
    LPAREN       reduce using rule 55 ($@4)
    DPERIOD      reduce using rule 55 ($@4)
    ASSIGN       reduce using rule 39 ($@3)
    $default     reduce using rule 41 (primary)

    $@1  go to state 85
    $@2  go to state 86
    $@3  go to state 87
    $@4  go to state 88


state 34

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


state 35

   42 primary: call .
   52 member: call . PERIOD ID
   53       | call . LSQUARE expr RSQUARE
   54 call: call . LPAREN elist RPAREN

    LPAREN   shift, and go to state 89
    LSQUARE  shift, and go to state 90
    PERIOD   shift, and go to state 91

    $default  reduce using rule 42 (primary)


state 36

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


state 37

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


state 38

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


state 39

   45 primary: const .

    $default  reduce using rule 45 (primary)


state 40

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


state 41

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


state 42

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


state 43

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


state 44

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: SUB expr .

    $default  reduce using rule 30 (term)


state 45

   57 call: LPAREN . funcdef RPAREN LPAREN elist RPAREN

    FUNCTION  shift, and go to state 15

    funcdef  go to state 92


state 46

   32 term: PLUS_PLUS lvalue .
   50 member: lvalue . PERIOD ID
   51       | lvalue . LSQUARE expr RSQUARE
   56 call: lvalue . $@4 callsuffix

    LSQUARE  shift, and go to state 83
    PERIOD   shift, and go to state 84

    LPAREN    reduce using rule 55 ($@4)
    DPERIOD   reduce using rule 55 ($@4)
    $default  reduce using rule 32 (term)

    $@4  go to state 88


state 47

   52 member: call . PERIOD ID
   53       | call . LSQUARE expr RSQUARE
   54 call: call . LPAREN elist RPAREN

    LPAREN   shift, and go to state 89
    LSQUARE  shift, and go to state 90
    PERIOD   shift, and go to state 91


state 48

   35 term: MINUS_MINUS lvalue .
   50 member: lvalue . PERIOD ID
   51       | lvalue . LSQUARE expr RSQUARE
   56 call: lvalue . $@4 callsuffix

    LSQUARE  shift, and go to state 83
    PERIOD   shift, and go to state 84

    LPAREN    reduce using rule 55 ($@4)
    DPERIOD   reduce using rule 55 ($@4)
    $default  reduce using rule 35 (term)

    $@4  go to state 88


state 49

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: LPAREN expr . RPAREN

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RPAREN         shift, and go to state 93
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 50

   44 primary: LPAREN funcdef . RPAREN
   57 call: LPAREN funcdef . RPAREN LPAREN elist RPAREN

    RPAREN  shift, and go to state 94


state 51

   71 block: LCURLY $@5 . statements RCURLY

    $default  reduce using rule 3 (statements)

    statements  go to state 95


state 52

   69 indexedelem: LCURLY . expr COLON expr RCURLY

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 96
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 53

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   62 elist: expr .

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81
    OR             shift, and go to state 82

    $default  reduce using rule 62 (elist)


state 54

   63 elist: elist . COMMA expr
   65 objectdef: LSQUARE elist . RSQUARE

    RSQUARE  shift, and go to state 97
    COMMA    shift, and go to state 98


state 55

   66 objectdef: LSQUARE indexed . RSQUARE
   68 indexed: indexed . COMMA indexedelem

    RSQUARE  shift, and go to state 99
    COMMA    shift, and go to state 100


state 56

   67 indexed: indexedelem .

    $default  reduce using rule 67 (indexed)


state 57

   48 lvalue: DCOLON ID .

    $default  reduce using rule 48 (lvalue)


state 58

   89 ifstmt: IF LPAREN . expr RPAREN stmt ELSE stmt
   90       | IF LPAREN . expr RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 101
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 59

   91 whilestmt: WHILE LPAREN . expr RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 102
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 60

   92 forstmt: FOR LPAREN . elist SEMICOLON expr SEMICOLON elist RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 103
    objectdef   go to state 36
    const       go to state 39


state 61

   75 funcdef: FUNCTION ID . $@6 LPAREN $@7 idlist RPAREN $@8 block

    $default  reduce using rule 72 ($@6)

    $@6  go to state 104


state 62

   79 funcdef: FUNCTION $@9 . LPAREN $@10 idlist RPAREN $@11 block

    LPAREN  shift, and go to state 105


state 63

   94 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 94 (returnstmt)


state 64

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   93 returnstmt: RETURN expr . SEMICOLON

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    SEMICOLON      shift, and go to state 106
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 65

    9 stmt: BREAK SEMICOLON .

    $default  reduce using rule 9 (stmt)


state 66

   10 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (stmt)


state 67

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


state 68

   47 lvalue: LOCAL ID .

    $default  reduce using rule 47 (lvalue)


state 69

   15 expr: expr ADD . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 107
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 70

   16 expr: expr SUB . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 108
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 71

   17 expr: expr MUL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 109
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 72

   18 expr: expr DIV . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 110
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 73

   19 expr: expr MODULO . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 111
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 74

   24 expr: expr EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 112
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 75

   25 expr: expr NOT_EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 113
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 76

   20 expr: expr GREATER . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 114
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 77

   22 expr: expr LESSER . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 115
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 78

   23 expr: expr LESSER_EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 116
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 79

   21 expr: expr GREATER_EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 117
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 80

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


state 81

   26 expr: expr AND . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 118
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 82

   27 expr: expr OR . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 119
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 83

   51 member: lvalue LSQUARE . expr RSQUARE

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 120
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 84

   50 member: lvalue PERIOD . ID

    ID  shift, and go to state 121


state 85

   34 term: lvalue $@1 . PLUS_PLUS

    PLUS_PLUS  shift, and go to state 122


state 86

   37 term: lvalue $@2 . MINUS_MINUS

    MINUS_MINUS  shift, and go to state 123


state 87

   40 assignment: lvalue $@3 . ASSIGN expr

    ASSIGN  shift, and go to state 124


state 88

   56 call: lvalue $@4 . callsuffix

    LPAREN   shift, and go to state 125
    DPERIOD  shift, and go to state 126

    callsuffix  go to state 127
    normcall    go to state 128
    methodcall  go to state 129


state 89

   54 call: call LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 130
    objectdef   go to state 36
    const       go to state 39


state 90

   53 member: call LSQUARE . expr RSQUARE

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 131
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 91

   52 member: call PERIOD . ID

    ID  shift, and go to state 132


state 92

   57 call: LPAREN funcdef . RPAREN LPAREN elist RPAREN

    RPAREN  shift, and go to state 133


state 93

   29 term: LPAREN expr RPAREN .

    $default  reduce using rule 29 (term)


state 94

   44 primary: LPAREN funcdef RPAREN .
   57 call: LPAREN funcdef RPAREN . LPAREN elist RPAREN

    LPAREN  shift, and go to state 134

    $default  reduce using rule 44 (primary)


state 95

    2 statements: statements . stmt
   71 block: LCURLY $@5 statements . RCURLY

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    RCURLY       shift, and go to state 135
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 96

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   69 indexedelem: LCURLY expr . COLON expr RCURLY

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    COLON          shift, and go to state 136
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 97

   65 objectdef: LSQUARE elist RSQUARE .

    $default  reduce using rule 65 (objectdef)


state 98

   63 elist: elist COMMA . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 137
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 99

   66 objectdef: LSQUARE indexed RSQUARE .

    $default  reduce using rule 66 (objectdef)


state 100

   68 indexed: indexed COMMA . indexedelem

    LCURLY  shift, and go to state 52

    indexedelem  go to state 138


state 101

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   89 ifstmt: IF LPAREN expr . RPAREN stmt ELSE stmt
   90       | IF LPAREN expr . RPAREN stmt

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RPAREN         shift, and go to state 139
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 102

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   91 whilestmt: WHILE LPAREN expr . RPAREN stmt

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RPAREN         shift, and go to state 140
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 103

   63 elist: elist . COMMA expr
   92 forstmt: FOR LPAREN elist . SEMICOLON expr SEMICOLON elist RPAREN stmt

    SEMICOLON  shift, and go to state 141
    COMMA      shift, and go to state 98


state 104

   75 funcdef: FUNCTION ID $@6 . LPAREN $@7 idlist RPAREN $@8 block

    LPAREN  shift, and go to state 142


state 105

   79 funcdef: FUNCTION $@9 LPAREN . $@10 idlist RPAREN $@11 block

    $default  reduce using rule 77 ($@10)

    $@10  go to state 143


state 106

   93 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 93 (returnstmt)


state 107

   15 expr: expr . ADD expr
   15     | expr ADD expr .
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    $default  reduce using rule 15 (expr)


state 108

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   16     | expr SUB expr .
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    $default  reduce using rule 16 (expr)


state 109

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   17     | expr MUL expr .
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


state 110

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   18     | expr DIV expr .
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


state 111

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   19     | expr MODULO expr .
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


state 112

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   24     | expr EQUAL expr .
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


state 113

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   25     | expr NOT_EQUAL expr .
   26     | expr . AND expr
   27     | expr . OR expr

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


state 114

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   20     | expr GREATER expr .
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 20 (expr)


state 115

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   22     | expr LESSER expr .
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


state 116

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   23     | expr LESSER_EQUAL expr .
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


state 117

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   21     | expr GREATER_EQUAL expr .
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 21 (expr)


state 118

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79

    $default  reduce using rule 26 (expr)


state 119

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81

    $default  reduce using rule 27 (expr)


state 120

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   51 member: lvalue LSQUARE expr . RSQUARE

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RSQUARE        shift, and go to state 144
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 121

   50 member: lvalue PERIOD ID .

    $default  reduce using rule 50 (member)


state 122

   34 term: lvalue $@1 PLUS_PLUS .

    $default  reduce using rule 34 (term)


state 123

   37 term: lvalue $@2 MINUS_MINUS .

    $default  reduce using rule 37 (term)


state 124

   40 assignment: lvalue $@3 ASSIGN . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 145
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 125

   60 normcall: LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 146
    objectdef   go to state 36
    const       go to state 39


state 126

   61 methodcall: DPERIOD . ID LPAREN elist RPAREN

    ID  shift, and go to state 147


state 127

   56 call: lvalue $@4 callsuffix .

    $default  reduce using rule 56 (call)


state 128

   58 callsuffix: normcall .

    $default  reduce using rule 58 (callsuffix)


state 129

   59 callsuffix: methodcall .

    $default  reduce using rule 59 (callsuffix)


state 130

   54 call: call LPAREN elist . RPAREN
   63 elist: elist . COMMA expr

    RPAREN  shift, and go to state 148
    COMMA   shift, and go to state 98


state 131

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   53 member: call LSQUARE expr . RSQUARE

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RSQUARE        shift, and go to state 149
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 132

   52 member: call PERIOD ID .

    $default  reduce using rule 52 (member)


state 133

   57 call: LPAREN funcdef RPAREN . LPAREN elist RPAREN

    LPAREN  shift, and go to state 134


state 134

   57 call: LPAREN funcdef RPAREN LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 150
    objectdef   go to state 36
    const       go to state 39


state 135

   71 block: LCURLY $@5 statements RCURLY .

    $default  reduce using rule 71 (block)


state 136

   69 indexedelem: LCURLY expr COLON . expr RCURLY

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 151
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 137

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   63 elist: elist COMMA expr .

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81
    OR             shift, and go to state 82

    $default  reduce using rule 63 (elist)


state 138

   68 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 68 (indexed)


state 139

   89 ifstmt: IF LPAREN expr RPAREN . stmt ELSE stmt
   90       | IF LPAREN expr RPAREN . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    stmt        go to state 152
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 140

   91 whilestmt: WHILE LPAREN expr RPAREN . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    stmt        go to state 153
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 141

   92 forstmt: FOR LPAREN elist SEMICOLON . expr SEMICOLON elist RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    expr        go to state 154
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


state 142

   75 funcdef: FUNCTION ID $@6 LPAREN . $@7 idlist RPAREN $@8 block

    $default  reduce using rule 73 ($@7)

    $@7  go to state 155


state 143

   79 funcdef: FUNCTION $@9 LPAREN $@10 . idlist RPAREN $@11 block

    ID  shift, and go to state 156

    $default  reduce using rule 88 (idlist)

    idlist  go to state 157


state 144

   51 member: lvalue LSQUARE expr RSQUARE .

    $default  reduce using rule 51 (member)


state 145

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   40 assignment: lvalue $@3 ASSIGN expr .

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    AND            shift, and go to state 81
    OR             shift, and go to state 82

    $default  reduce using rule 40 (assignment)


state 146

   60 normcall: LPAREN elist . RPAREN
   63 elist: elist . COMMA expr

    RPAREN  shift, and go to state 158
    COMMA   shift, and go to state 98


state 147

   61 methodcall: DPERIOD ID . LPAREN elist RPAREN

    LPAREN  shift, and go to state 159


state 148

   54 call: call LPAREN elist RPAREN .

    $default  reduce using rule 54 (call)


state 149

   53 member: call LSQUARE expr RSQUARE .

    $default  reduce using rule 53 (member)


state 150

   57 call: LPAREN funcdef RPAREN LPAREN elist . RPAREN
   63 elist: elist . COMMA expr

    RPAREN  shift, and go to state 160
    COMMA   shift, and go to state 98


state 151

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   69 indexedelem: LCURLY expr COLON expr . RCURLY

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    RCURLY         shift, and go to state 161
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 152

   89 ifstmt: IF LPAREN expr RPAREN stmt . ELSE stmt
   90       | IF LPAREN expr RPAREN stmt .

    ELSE  shift, and go to state 162

    ELSE      [reduce using rule 90 (ifstmt)]
    $default  reduce using rule 90 (ifstmt)


state 153

   91 whilestmt: WHILE LPAREN expr RPAREN stmt .

    $default  reduce using rule 91 (whilestmt)


state 154

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   92 forstmt: FOR LPAREN elist SEMICOLON expr . SEMICOLON elist RPAREN stmt

    ADD            shift, and go to state 69
    SUB            shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESSER         shift, and go to state 77
    LESSER_EQUAL   shift, and go to state 78
    GREATER_EQUAL  shift, and go to state 79
    SEMICOLON      shift, and go to state 163
    AND            shift, and go to state 81
    OR             shift, and go to state 82


state 155

   75 funcdef: FUNCTION ID $@6 LPAREN $@7 . idlist RPAREN $@8 block

    ID  shift, and go to state 156

    $default  reduce using rule 88 (idlist)

    idlist  go to state 164


state 156

   86 idlist: ID .

    $default  reduce using rule 86 (idlist)


state 157

   79 funcdef: FUNCTION $@9 LPAREN $@10 idlist . RPAREN $@11 block
   87 idlist: idlist . COMMA ID

    RPAREN  shift, and go to state 165
    COMMA   shift, and go to state 166


state 158

   60 normcall: LPAREN elist RPAREN .

    $default  reduce using rule 60 (normcall)


state 159

   61 methodcall: DPERIOD ID LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 167
    objectdef   go to state 36
    const       go to state 39


state 160

   57 call: LPAREN funcdef RPAREN LPAREN elist RPAREN .

    $default  reduce using rule 57 (call)


state 161

   69 indexedelem: LCURLY expr COLON expr RCURLY .

    $default  reduce using rule 69 (indexedelem)


state 162

   89 ifstmt: IF LPAREN expr RPAREN stmt ELSE . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    stmt        go to state 168
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 163

   92 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON . elist RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    $default  reduce using rule 64 (elist)

    expr        go to state 53
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 169
    objectdef   go to state 36
    const       go to state 39


state 164

   75 funcdef: FUNCTION ID $@6 LPAREN $@7 idlist . RPAREN $@8 block
   87 idlist: idlist . COMMA ID

    RPAREN  shift, and go to state 170
    COMMA   shift, and go to state 166


state 165

   79 funcdef: FUNCTION $@9 LPAREN $@10 idlist RPAREN . $@11 block

    $default  reduce using rule 78 ($@11)

    $@11  go to state 171


state 166

   87 idlist: idlist COMMA . ID

    ID  shift, and go to state 172


state 167

   61 methodcall: DPERIOD ID LPAREN elist . RPAREN
   63 elist: elist . COMMA expr

    RPAREN  shift, and go to state 173
    COMMA   shift, and go to state 98


state 168

   89 ifstmt: IF LPAREN expr RPAREN stmt ELSE stmt .

    $default  reduce using rule 89 (ifstmt)


state 169

   63 elist: elist . COMMA expr
   92 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist . RPAREN stmt

    RPAREN  shift, and go to state 174
    COMMA   shift, and go to state 98


state 170

   75 funcdef: FUNCTION ID $@6 LPAREN $@7 idlist RPAREN . $@8 block

    $default  reduce using rule 74 ($@8)

    $@8  go to state 175


state 171

   79 funcdef: FUNCTION $@9 LPAREN $@10 idlist RPAREN $@11 . block

    LCURLY  shift, and go to state 8

    block  go to state 176


state 172

   87 idlist: idlist COMMA ID .

    $default  reduce using rule 87 (idlist)


state 173

   61 methodcall: DPERIOD ID LPAREN elist RPAREN .

    $default  reduce using rule 61 (methodcall)


state 174

   92 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    BREAK        shift, and go to state 17
    CONTINUE     shift, and go to state 18
    NOT          shift, and go to state 19
    LOCAL        shift, and go to state 20
    NIL          shift, and go to state 21
    TRUE         shift, and go to state 22
    FALSE        shift, and go to state 23
    STRING       shift, and go to state 24
    ID           shift, and go to state 25
    INTEGER      shift, and go to state 26
    REAL         shift, and go to state 27

    stmt        go to state 177
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


state 175

   75 funcdef: FUNCTION ID $@6 LPAREN $@7 idlist RPAREN $@8 . block

    LCURLY  shift, and go to state 8

    block  go to state 178


state 176

   79 funcdef: FUNCTION $@9 LPAREN $@10 idlist RPAREN $@11 block .

    $default  reduce using rule 79 (funcdef)


state 177

   92 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN stmt .

    $default  reduce using rule 92 (forstmt)


state 178

   75 funcdef: FUNCTION ID $@6 LPAREN $@7 idlist RPAREN $@8 block .

    $default  reduce using rule 75 (funcdef)
