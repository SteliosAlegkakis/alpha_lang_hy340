State 155 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statements stmt
    3           | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignment
   15     | expr ADD expr
   16     | expr SUB expr
   17     | expr MUL expr
   18     | expr DIV expr
   19     | expr MODULO expr
   20     | expr GREATER expr
   21     | expr GREATER_EQUAL expr
   22     | expr LESSER expr
   23     | expr LESSER_EQUAL expr
   24     | expr EQUAL expr
   25     | expr NOT_EQUAL expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: LPAREN expr RPAREN
   30     | SUB expr
   31     | NOT expr
   32     | PLUS_PLUS lvalue
   33     | lvalue PLUS_PLUS
   34     | MINUS_MINUS lvalue
   35     | lvalue MINUS_MINUS
   36     | primary

   37 assignment: lvalue ASSIGN expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LPAREN funcdef RPAREN
   42        | const

   43 lvalue: ID
   44       | LOCAL ID
   45       | DCOLON ID
   46       | member

   47 member: lvalue PERIOD ID
   48       | lvalue LSQUARE expr RSQUARE
   49       | call PERIOD ID
   50       | call LSQUARE expr RSQUARE

   51 call: call LPAREN elist RPAREN
   52     | lvalue callsuffix
   53     | LPAREN funcdef RPAREN LPAREN elist RPAREN

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: LPAREN elist RPAREN

   57 methodcall: DPERIOD ID LPAREN elist RPAREN

   58 elist: expr
   59      | expr COMMA elist
   60      | %empty

   61 objectdef: LSQUARE elist RSQUARE
   62          | LSQUARE indexed RSQUARE

   63 indexed: indexedelem
   64        | indexedelem COMMA indexed

   65 indexedelem: LCURLY expr COLON expr RCURLY

   66 $@1: %empty

   67 block: LCURLY $@1 statements RCURLY

   68 funcname: ID
   69         | %empty

   70 funcprefix: FUNCTION funcname

   71 funcargs: LPAREN idlist RPAREN

   72 funcbody: block

   73 funcdef: funcprefix funcargs funcbody

   74 const: INTEGER
   75      | REAL
   76      | STRING
   77      | NIL
   78      | TRUE
   79      | FALSE

   80 idlist: ID
   81       | idlist COMMA ID
   82       | %empty

   83 ifstmt: IF LPAREN expr RPAREN stmt ELSE stmt
   84       | IF LPAREN expr RPAREN stmt

   85 loopstart: %empty

   86 loopend: %empty

   87 loopstmt: loopstart stmt loopend

   88 $@2: %empty

   89 whilestmt: WHILE LPAREN expr RPAREN $@2 loopstmt

   90 $@3: %empty

   91 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN $@3 loopstmt

   92 returnstmt: RETURN expr SEMICOLON
   93           | RETURN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ADD <stringValue> (258) 15
    SUB <stringValue> (259) 16 30
    MUL <stringValue> (260) 17
    DIV <stringValue> (261) 18
    PLUS_PLUS <stringValue> (262) 32 33
    MINUS_MINUS <stringValue> (263) 34 35
    MODULO <stringValue> (264) 19
    EQUAL <stringValue> (265) 24
    NOT_EQUAL <stringValue> (266) 25
    GREATER <stringValue> (267) 20
    LESSER <stringValue> (268) 22
    LESSER_EQUAL <stringValue> (269) 23
    GREATER_EQUAL <stringValue> (270) 21
    LPAREN <stringValue> (271) 29 41 51 53 56 57 71 83 84 89 91
    RPAREN <stringValue> (272) 29 41 51 53 56 57 71 83 84 89 91
    LCURLY <stringValue> (273) 65 67
    RCURLY <stringValue> (274) 65 67
    LSQUARE <stringValue> (275) 48 50 61 62
    RSQUARE <stringValue> (276) 48 50 61 62
    COLON <stringValue> (277) 65
    SEMICOLON <stringValue> (278) 4 9 10 13 91 92 93
    DCOLON <stringValue> (279) 45
    COMMA <stringValue> (280) 59 64 81
    PERIOD <stringValue> (281) 47 49
    DPERIOD <stringValue> (282) 57
    IF <stringValue> (283) 83 84
    ELSE <stringValue> (284) 83
    WHILE <stringValue> (285) 89
    FOR <stringValue> (286) 91
    FUNCTION <stringValue> (287) 70
    RETURN <stringValue> (288) 92 93
    AND <stringValue> (289) 26
    NOT <stringValue> (290) 31
    OR <stringValue> (291) 27
    LOCAL <stringValue> (292) 44
    ASSIGN <stringValue> (293) 37
    NIL <stringValue> (294) 77
    TRUE <stringValue> (295) 78
    FALSE <stringValue> (296) 79
    STRING <stringValue> (297) 76
    ID <stringValue> (298) 43 44 45 47 49 57 68 80 81
    INTEGER <intValue> (299) 74
    REAL <realValue> (300) 75
    BREAK <stmt_stmt> (301) 9
    CONTINUE <stmt_stmt> (302) 10
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    statements <stmt_stmt> (51)
        on left: 2 3
        on right: 1 2 67
    stmt <stmt_stmt> (52)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 83 84 87
    expr <expr> (53)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 58 59 65 83 84 89 91 92
    term <expr> (54)
        on left: 29 30 31 32 33 34 35 36
        on right: 28
    assignment <expr> (55)
        on left: 37
        on right: 14
    primary <expr> (56)
        on left: 38 39 40 41 42
        on right: 36
    lvalue <expr> (57)
        on left: 43 44 45 46
        on right: 32 33 34 35 37 38 47 48 52
    member <expr> (58)
        on left: 47 48 49 50
        on right: 46
    call <expr> (59)
        on left: 51 52 53
        on right: 39 49 50 51
    callsuffix <call> (60)
        on left: 54 55
        on right: 52
    normcall <call> (61)
        on left: 56
        on right: 54
    methodcall <call> (62)
        on left: 57
        on right: 55
    elist <expr> (63)
        on left: 58 59 60
        on right: 51 53 56 57 59 61 91
    objectdef <expr> (64)
        on left: 61 62
        on right: 40
    indexed <expr> (65)
        on left: 63 64
        on right: 62 64
    indexedelem <expr> (66)
        on left: 65
        on right: 63 64
    block <stmt_stmt> (67)
        on left: 67
        on right: 11 72
    $@1 (68)
        on left: 66
        on right: 67
    funcname <stringValue> (69)
        on left: 68 69
        on right: 70
    funcprefix <symbol> (70)
        on left: 70
        on right: 73
    funcargs (71)
        on left: 71
        on right: 73
    funcbody <uintValue> (72)
        on left: 72
        on right: 73
    funcdef <symbol> (73)
        on left: 73
        on right: 12 41 53
    const <expr> (74)
        on left: 74 75 76 77 78 79
        on right: 42
    idlist <symbol> (75)
        on left: 80 81 82
        on right: 71 81
    ifstmt <stmt_stmt> (76)
        on left: 83 84
        on right: 5
    loopstart (77)
        on left: 85
        on right: 87
    loopend (78)
        on left: 86
        on right: 87
    loopstmt (79)
        on left: 87
        on right: 89 91
    whilestmt <symbol> (80)
        on left: 89
        on right: 6
    $@2 (81)
        on left: 88
        on right: 89
    forstmt <symbol> (82)
        on left: 91
        on right: 7
    $@3 (83)
        on left: 90
        on right: 91
    returnstmt <symbol> (84)
        on left: 92 93
        on right: 8


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statements .
    2 statements: statements . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25
    BREAK        shift, and go to state 26
    CONTINUE     shift, and go to state 27

    $default  reduce using rule 1 (program)

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 3

    0 $accept: program $end .

    $default  accept


State 4

   30 term: SUB . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 45
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 5

   32 term: PLUS_PLUS . lvalue

    LPAREN  shift, and go to state 46
    DCOLON  shift, and go to state 11
    LOCAL   shift, and go to state 18
    ID      shift, and go to state 23

    lvalue  go to state 47
    member  go to state 34
    call    go to state 48


State 6

   34 term: MINUS_MINUS . lvalue

    LPAREN  shift, and go to state 46
    DCOLON  shift, and go to state 11
    LOCAL   shift, and go to state 18
    ID      shift, and go to state 23

    lvalue  go to state 49
    member  go to state 34
    call    go to state 48


State 7

   29 term: LPAREN . expr RPAREN
   41 primary: LPAREN . funcdef RPAREN
   53 call: LPAREN . funcdef RPAREN LPAREN elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    FUNCTION     shift, and go to state 15
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 50
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcprefix  go to state 38
    funcdef     go to state 51
    const       go to state 40


State 8

   67 block: LCURLY . $@1 statements RCURLY

    $default  reduce using rule 66 ($@1)

    $@1  go to state 52


State 9

   61 objectdef: LSQUARE . elist RSQUARE
   62          | LSQUARE . indexed RSQUARE

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 53
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    $default  reduce using rule 60 (elist)

    expr         go to state 54
    term         go to state 30
    assignment   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 55
    objectdef    go to state 36
    indexed      go to state 56
    indexedelem  go to state 57
    const        go to state 40


State 10

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 11

   45 lvalue: DCOLON . ID

    ID  shift, and go to state 58


State 12

   83 ifstmt: IF . LPAREN expr RPAREN stmt ELSE stmt
   84       | IF . LPAREN expr RPAREN stmt

    LPAREN  shift, and go to state 59


State 13

   89 whilestmt: WHILE . LPAREN expr RPAREN $@2 loopstmt

    LPAREN  shift, and go to state 60


State 14

   91 forstmt: FOR . LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN $@3 loopstmt

    LPAREN  shift, and go to state 61


State 15

   70 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 62

    $default  reduce using rule 69 (funcname)

    funcname  go to state 63


State 16

   92 returnstmt: RETURN . expr SEMICOLON
   93           | RETURN . SEMICOLON

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 64
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 65
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 17

   31 term: NOT . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 66
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 18

   44 lvalue: LOCAL . ID

    ID  shift, and go to state 67


State 19

   77 const: NIL .

    $default  reduce using rule 77 (const)


State 20

   78 const: TRUE .

    $default  reduce using rule 78 (const)


State 21

   79 const: FALSE .

    $default  reduce using rule 79 (const)


State 22

   76 const: STRING .

    $default  reduce using rule 76 (const)


State 23

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


State 24

   74 const: INTEGER .

    $default  reduce using rule 74 (const)


State 25

   75 const: REAL .

    $default  reduce using rule 75 (const)


State 26

    9 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 27

   10 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 28

    2 statements: statements stmt .

    $default  reduce using rule 2 (statements)


State 29

    4 stmt: expr . SEMICOLON
   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    SEMICOLON      shift, and go to state 81
    AND            shift, and go to state 82
    OR             shift, and go to state 83


State 30

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 31

   14 expr: assignment .

    $default  reduce using rule 14 (expr)


State 32

   36 term: primary .

    $default  reduce using rule 36 (term)


State 33

   33 term: lvalue . PLUS_PLUS
   35     | lvalue . MINUS_MINUS
   37 assignment: lvalue . ASSIGN expr
   38 primary: lvalue .
   47 member: lvalue . PERIOD ID
   48       | lvalue . LSQUARE expr RSQUARE
   52 call: lvalue . callsuffix

    PLUS_PLUS    shift, and go to state 84
    MINUS_MINUS  shift, and go to state 85
    LPAREN       shift, and go to state 86
    LSQUARE      shift, and go to state 87
    PERIOD       shift, and go to state 88
    DPERIOD      shift, and go to state 89
    ASSIGN       shift, and go to state 90

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 34

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


State 35

   39 primary: call .
   49 member: call . PERIOD ID
   50       | call . LSQUARE expr RSQUARE
   51 call: call . LPAREN elist RPAREN

    LPAREN   shift, and go to state 94
    LSQUARE  shift, and go to state 95
    PERIOD   shift, and go to state 96

    $default  reduce using rule 39 (primary)


State 36

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


State 37

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 38

   73 funcdef: funcprefix . funcargs funcbody

    LPAREN  shift, and go to state 97

    funcargs  go to state 98


State 39

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 40

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 41

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 42

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 43

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 44

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 45

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: SUB expr .

    $default  reduce using rule 30 (term)


State 46

   53 call: LPAREN . funcdef RPAREN LPAREN elist RPAREN

    FUNCTION  shift, and go to state 15

    funcprefix  go to state 38
    funcdef     go to state 99


State 47

   32 term: PLUS_PLUS lvalue .
   47 member: lvalue . PERIOD ID
   48       | lvalue . LSQUARE expr RSQUARE
   52 call: lvalue . callsuffix

    LPAREN   shift, and go to state 86
    LSQUARE  shift, and go to state 87
    PERIOD   shift, and go to state 88
    DPERIOD  shift, and go to state 89

    $default  reduce using rule 32 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 48

   49 member: call . PERIOD ID
   50       | call . LSQUARE expr RSQUARE
   51 call: call . LPAREN elist RPAREN

    LPAREN   shift, and go to state 94
    LSQUARE  shift, and go to state 95
    PERIOD   shift, and go to state 96


State 49

   34 term: MINUS_MINUS lvalue .
   47 member: lvalue . PERIOD ID
   48       | lvalue . LSQUARE expr RSQUARE
   52 call: lvalue . callsuffix

    LPAREN   shift, and go to state 86
    LSQUARE  shift, and go to state 87
    PERIOD   shift, and go to state 88
    DPERIOD  shift, and go to state 89

    $default  reduce using rule 34 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 50

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: LPAREN expr . RPAREN

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    RPAREN         shift, and go to state 100
    AND            shift, and go to state 82
    OR             shift, and go to state 83


State 51

   41 primary: LPAREN funcdef . RPAREN
   53 call: LPAREN funcdef . RPAREN LPAREN elist RPAREN

    RPAREN  shift, and go to state 101


State 52

   67 block: LCURLY $@1 . statements RCURLY

    $default  reduce using rule 3 (statements)

    statements  go to state 102


State 53

   65 indexedelem: LCURLY . expr COLON expr RCURLY

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 103
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 54

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   58 elist: expr .
   59      | expr . COMMA elist

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    COMMA          shift, and go to state 104
    AND            shift, and go to state 82
    OR             shift, and go to state 83

    $default  reduce using rule 58 (elist)


State 55

   61 objectdef: LSQUARE elist . RSQUARE

    RSQUARE  shift, and go to state 105


State 56

   62 objectdef: LSQUARE indexed . RSQUARE

    RSQUARE  shift, and go to state 106


State 57

   63 indexed: indexedelem .
   64        | indexedelem . COMMA indexed

    COMMA  shift, and go to state 107

    $default  reduce using rule 63 (indexed)


State 58

   45 lvalue: DCOLON ID .

    $default  reduce using rule 45 (lvalue)


State 59

   83 ifstmt: IF LPAREN . expr RPAREN stmt ELSE stmt
   84       | IF LPAREN . expr RPAREN stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 108
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 60

   89 whilestmt: WHILE LPAREN . expr RPAREN $@2 loopstmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 109
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 61

   91 forstmt: FOR LPAREN . elist SEMICOLON expr SEMICOLON elist RPAREN $@3 loopstmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    $default  reduce using rule 60 (elist)

    expr        go to state 54
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 110
    objectdef   go to state 36
    const       go to state 40


State 62

   68 funcname: ID .

    $default  reduce using rule 68 (funcname)


State 63

   70 funcprefix: FUNCTION funcname .

    $default  reduce using rule 70 (funcprefix)


State 64

   93 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 93 (returnstmt)


State 65

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   92 returnstmt: RETURN expr . SEMICOLON

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    SEMICOLON      shift, and go to state 111
    AND            shift, and go to state 82
    OR             shift, and go to state 83


State 66

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


State 67

   44 lvalue: LOCAL ID .

    $default  reduce using rule 44 (lvalue)


State 68

    9 stmt: BREAK SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 69

   10 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 70

   15 expr: expr ADD . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 112
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 71

   16 expr: expr SUB . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 113
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 72

   17 expr: expr MUL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 114
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 73

   18 expr: expr DIV . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 115
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 74

   19 expr: expr MODULO . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 116
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 75

   24 expr: expr EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 117
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 76

   25 expr: expr NOT_EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 118
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 77

   20 expr: expr GREATER . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 119
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 78

   22 expr: expr LESSER . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 120
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 79

   23 expr: expr LESSER_EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 121
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 80

   21 expr: expr GREATER_EQUAL . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 122
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 81

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 82

   26 expr: expr AND . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 123
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 83

   27 expr: expr OR . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 124
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 84

   33 term: lvalue PLUS_PLUS .

    $default  reduce using rule 33 (term)


State 85

   35 term: lvalue MINUS_MINUS .

    $default  reduce using rule 35 (term)


State 86

   56 normcall: LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    $default  reduce using rule 60 (elist)

    expr        go to state 54
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 125
    objectdef   go to state 36
    const       go to state 40


State 87

   48 member: lvalue LSQUARE . expr RSQUARE

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 126
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 88

   47 member: lvalue PERIOD . ID

    ID  shift, and go to state 127


State 89

   57 methodcall: DPERIOD . ID LPAREN elist RPAREN

    ID  shift, and go to state 128


State 90

   37 assignment: lvalue ASSIGN . expr

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 129
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 91

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


State 92

   54 callsuffix: normcall .

    $default  reduce using rule 54 (callsuffix)


State 93

   55 callsuffix: methodcall .

    $default  reduce using rule 55 (callsuffix)


State 94

   51 call: call LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    $default  reduce using rule 60 (elist)

    expr        go to state 54
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 130
    objectdef   go to state 36
    const       go to state 40


State 95

   50 member: call LSQUARE . expr RSQUARE

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 131
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 96

   49 member: call PERIOD . ID

    ID  shift, and go to state 132


State 97

   71 funcargs: LPAREN . idlist RPAREN

    ID  shift, and go to state 133

    $default  reduce using rule 82 (idlist)

    idlist  go to state 134


State 98

   73 funcdef: funcprefix funcargs . funcbody

    LCURLY  shift, and go to state 8

    block     go to state 135
    funcbody  go to state 136


State 99

   53 call: LPAREN funcdef . RPAREN LPAREN elist RPAREN

    RPAREN  shift, and go to state 137


State 100

   29 term: LPAREN expr RPAREN .

    $default  reduce using rule 29 (term)


State 101

   41 primary: LPAREN funcdef RPAREN .
   53 call: LPAREN funcdef RPAREN . LPAREN elist RPAREN

    LPAREN  shift, and go to state 138

    $default  reduce using rule 41 (primary)


State 102

    2 statements: statements . stmt
   67 block: LCURLY $@1 statements . RCURLY

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    RCURLY       shift, and go to state 139
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25
    BREAK        shift, and go to state 26
    CONTINUE     shift, and go to state 27

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 103

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   65 indexedelem: LCURLY expr . COLON expr RCURLY

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    COLON          shift, and go to state 140
    AND            shift, and go to state 82
    OR             shift, and go to state 83


State 104

   59 elist: expr COMMA . elist

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    $default  reduce using rule 60 (elist)

    expr        go to state 54
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 141
    objectdef   go to state 36
    const       go to state 40


State 105

   61 objectdef: LSQUARE elist RSQUARE .

    $default  reduce using rule 61 (objectdef)


State 106

   62 objectdef: LSQUARE indexed RSQUARE .

    $default  reduce using rule 62 (objectdef)


State 107

   64 indexed: indexedelem COMMA . indexed

    LCURLY  shift, and go to state 53

    indexed      go to state 142
    indexedelem  go to state 57


State 108

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   83 ifstmt: IF LPAREN expr . RPAREN stmt ELSE stmt
   84       | IF LPAREN expr . RPAREN stmt

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    RPAREN         shift, and go to state 143
    AND            shift, and go to state 82
    OR             shift, and go to state 83


State 109

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   89 whilestmt: WHILE LPAREN expr . RPAREN $@2 loopstmt

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    RPAREN         shift, and go to state 144
    AND            shift, and go to state 82
    OR             shift, and go to state 83


State 110

   91 forstmt: FOR LPAREN elist . SEMICOLON expr SEMICOLON elist RPAREN $@3 loopstmt

    SEMICOLON  shift, and go to state 145


State 111

   92 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 92 (returnstmt)


State 112

   15 expr: expr . ADD expr
   15     | expr ADD expr .
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MODULO  shift, and go to state 74

    $default  reduce using rule 15 (expr)


State 113

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   16     | expr SUB expr .
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MODULO  shift, and go to state 74

    $default  reduce using rule 16 (expr)


State 114

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   17     | expr MUL expr .
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 115

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   18     | expr DIV expr .
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 116

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   19     | expr MODULO expr .
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 117

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   24     | expr EQUAL expr .
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 118

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   25     | expr NOT_EQUAL expr .
   26     | expr . AND expr
   27     | expr . OR expr

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 119

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   20     | expr GREATER expr .
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MODULO  shift, and go to state 74

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 120

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   22     | expr LESSER expr .
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MODULO  shift, and go to state 74

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 121

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   23     | expr LESSER_EQUAL expr .
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MODULO  shift, and go to state 74

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 122

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   21     | expr GREATER_EQUAL expr .
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MODULO  shift, and go to state 74

    GREATER        error (nonassociative)
    LESSER         error (nonassociative)
    LESSER_EQUAL   error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 123

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80

    $default  reduce using rule 26 (expr)


State 124

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    AND            shift, and go to state 82

    $default  reduce using rule 27 (expr)


State 125

   56 normcall: LPAREN elist . RPAREN

    RPAREN  shift, and go to state 146


State 126

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   48 member: lvalue LSQUARE expr . RSQUARE

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    RSQUARE        shift, and go to state 147
    AND            shift, and go to state 82
    OR             shift, and go to state 83


State 127

   47 member: lvalue PERIOD ID .

    $default  reduce using rule 47 (member)


State 128

   57 methodcall: DPERIOD ID . LPAREN elist RPAREN

    LPAREN  shift, and go to state 148


State 129

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   37 assignment: lvalue ASSIGN expr .

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    AND            shift, and go to state 82
    OR             shift, and go to state 83

    $default  reduce using rule 37 (assignment)


State 130

   51 call: call LPAREN elist . RPAREN

    RPAREN  shift, and go to state 149


State 131

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   50 member: call LSQUARE expr . RSQUARE

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    RSQUARE        shift, and go to state 150
    AND            shift, and go to state 82
    OR             shift, and go to state 83


State 132

   49 member: call PERIOD ID .

    $default  reduce using rule 49 (member)


State 133

   80 idlist: ID .

    $default  reduce using rule 80 (idlist)


State 134

   71 funcargs: LPAREN idlist . RPAREN
   81 idlist: idlist . COMMA ID

    RPAREN  shift, and go to state 151
    COMMA   shift, and go to state 152


State 135

   72 funcbody: block .

    $default  reduce using rule 72 (funcbody)


State 136

   73 funcdef: funcprefix funcargs funcbody .

    $default  reduce using rule 73 (funcdef)


State 137

   53 call: LPAREN funcdef RPAREN . LPAREN elist RPAREN

    LPAREN  shift, and go to state 138


State 138

   53 call: LPAREN funcdef RPAREN LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    $default  reduce using rule 60 (elist)

    expr        go to state 54
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 153
    objectdef   go to state 36
    const       go to state 40


State 139

   67 block: LCURLY $@1 statements RCURLY .

    $default  reduce using rule 67 (block)


State 140

   65 indexedelem: LCURLY expr COLON . expr RCURLY

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 154
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 141

   59 elist: expr COMMA elist .

    $default  reduce using rule 59 (elist)


State 142

   64 indexed: indexedelem COMMA indexed .

    $default  reduce using rule 64 (indexed)


State 143

   83 ifstmt: IF LPAREN expr RPAREN . stmt ELSE stmt
   84       | IF LPAREN expr RPAREN . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25
    BREAK        shift, and go to state 26
    CONTINUE     shift, and go to state 27

    stmt        go to state 155
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 144

   89 whilestmt: WHILE LPAREN expr RPAREN . $@2 loopstmt

    $default  reduce using rule 88 ($@2)

    $@2  go to state 156


State 145

   91 forstmt: FOR LPAREN elist SEMICOLON . expr SEMICOLON elist RPAREN $@3 loopstmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    expr        go to state 157
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40


State 146

   56 normcall: LPAREN elist RPAREN .

    $default  reduce using rule 56 (normcall)


State 147

   48 member: lvalue LSQUARE expr RSQUARE .

    $default  reduce using rule 48 (member)


State 148

   57 methodcall: DPERIOD ID LPAREN . elist RPAREN

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    $default  reduce using rule 60 (elist)

    expr        go to state 54
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 158
    objectdef   go to state 36
    const       go to state 40


State 149

   51 call: call LPAREN elist RPAREN .

    $default  reduce using rule 51 (call)


State 150

   50 member: call LSQUARE expr RSQUARE .

    $default  reduce using rule 50 (member)


State 151

   71 funcargs: LPAREN idlist RPAREN .

    $default  reduce using rule 71 (funcargs)


State 152

   81 idlist: idlist COMMA . ID

    ID  shift, and go to state 159


State 153

   53 call: LPAREN funcdef RPAREN LPAREN elist . RPAREN

    RPAREN  shift, and go to state 160


State 154

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   65 indexedelem: LCURLY expr COLON expr . RCURLY

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    RCURLY         shift, and go to state 161
    AND            shift, and go to state 82
    OR             shift, and go to state 83


State 155

   83 ifstmt: IF LPAREN expr RPAREN stmt . ELSE stmt
   84       | IF LPAREN expr RPAREN stmt .

    ELSE  shift, and go to state 162

    ELSE      [reduce using rule 84 (ifstmt)]
    $default  reduce using rule 84 (ifstmt)


State 156

   89 whilestmt: WHILE LPAREN expr RPAREN $@2 . loopstmt

    $default  reduce using rule 85 (loopstart)

    loopstart  go to state 163
    loopstmt   go to state 164


State 157

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MODULO expr
   20     | expr . GREATER expr
   21     | expr . GREATER_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . NOT_EQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   91 forstmt: FOR LPAREN elist SEMICOLON expr . SEMICOLON elist RPAREN $@3 loopstmt

    ADD            shift, and go to state 70
    SUB            shift, and go to state 71
    MUL            shift, and go to state 72
    DIV            shift, and go to state 73
    MODULO         shift, and go to state 74
    EQUAL          shift, and go to state 75
    NOT_EQUAL      shift, and go to state 76
    GREATER        shift, and go to state 77
    LESSER         shift, and go to state 78
    LESSER_EQUAL   shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 80
    SEMICOLON      shift, and go to state 165
    AND            shift, and go to state 82
    OR             shift, and go to state 83


State 158

   57 methodcall: DPERIOD ID LPAREN elist . RPAREN

    RPAREN  shift, and go to state 166


State 159

   81 idlist: idlist COMMA ID .

    $default  reduce using rule 81 (idlist)


State 160

   53 call: LPAREN funcdef RPAREN LPAREN elist RPAREN .

    $default  reduce using rule 53 (call)


State 161

   65 indexedelem: LCURLY expr COLON expr RCURLY .

    $default  reduce using rule 65 (indexedelem)


State 162

   83 ifstmt: IF LPAREN expr RPAREN stmt ELSE . stmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25
    BREAK        shift, and go to state 26
    CONTINUE     shift, and go to state 27

    stmt        go to state 167
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 163

   87 loopstmt: loopstart . stmt loopend

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LCURLY       shift, and go to state 8
    LSQUARE      shift, and go to state 9
    SEMICOLON    shift, and go to state 10
    DCOLON       shift, and go to state 11
    IF           shift, and go to state 12
    WHILE        shift, and go to state 13
    FOR          shift, and go to state 14
    FUNCTION     shift, and go to state 15
    RETURN       shift, and go to state 16
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25
    BREAK        shift, and go to state 26
    CONTINUE     shift, and go to state 27

    stmt        go to state 168
    expr        go to state 29
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 164

   89 whilestmt: WHILE LPAREN expr RPAREN $@2 loopstmt .

    $default  reduce using rule 89 (whilestmt)


State 165

   91 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON . elist RPAREN $@3 loopstmt

    SUB          shift, and go to state 4
    PLUS_PLUS    shift, and go to state 5
    MINUS_MINUS  shift, and go to state 6
    LPAREN       shift, and go to state 7
    LSQUARE      shift, and go to state 9
    DCOLON       shift, and go to state 11
    NOT          shift, and go to state 17
    LOCAL        shift, and go to state 18
    NIL          shift, and go to state 19
    TRUE         shift, and go to state 20
    FALSE        shift, and go to state 21
    STRING       shift, and go to state 22
    ID           shift, and go to state 23
    INTEGER      shift, and go to state 24
    REAL         shift, and go to state 25

    $default  reduce using rule 60 (elist)

    expr        go to state 54
    term        go to state 30
    assignment  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 169
    objectdef   go to state 36
    const       go to state 40


State 166

   57 methodcall: DPERIOD ID LPAREN elist RPAREN .

    $default  reduce using rule 57 (methodcall)


State 167

   83 ifstmt: IF LPAREN expr RPAREN stmt ELSE stmt .

    $default  reduce using rule 83 (ifstmt)


State 168

   87 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 86 (loopend)

    loopend  go to state 170


State 169

   91 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist . RPAREN $@3 loopstmt

    RPAREN  shift, and go to state 171


State 170

   87 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 87 (loopstmt)


State 171

   91 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN . $@3 loopstmt

    $default  reduce using rule 90 ($@3)

    $@3  go to state 172


State 172

   91 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN $@3 . loopstmt

    $default  reduce using rule 85 (loopstart)

    loopstart  go to state 163
    loopstmt   go to state 173


State 173

   91 forstmt: FOR LPAREN elist SEMICOLON expr SEMICOLON elist RPAREN $@3 loopstmt .

    $default  reduce using rule 91 (forstmt)
